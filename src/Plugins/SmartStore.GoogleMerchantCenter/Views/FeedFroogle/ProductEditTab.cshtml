@model SmartStore.GoogleMerchantCenter.Models.GoogleProductModel

@{
	Layout = "";
}

<script>
	$(function () {
		var googCategories;

		$('#@Html.IdFor(m => m.Taxonomy)').typeahead({
			items: 18,
			source: function (query, process) {
				if (googCategories === undefined) {
					return $.ajax({
						dataType: "json",
						url: '@Url.Action("GoogleCategories")',
						type: 'POST',
						success: function (json) {
							googCategories = json;
							process(json);
						},
					});
				}
				else {
					process(googCategories);
				}
			}
		});
	});
</script>

@* VERY IMPORTANT for proper model binding *@
@Html.Hidden("__Type__", Model.GetType().AssemblyQualifiedName)

@Html.HiddenFor(m => m.ProductId)

<table class="adminContent">
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Taxonomy)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(m => m.Taxonomy, new { data_provide = "typeahead", placeholder = ViewBag.DefaultCategory, style = "width: 97%", autocomplete = "off" })
			@Html.ValidationMessageFor(m => m.Taxonomy)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Gender)
		</td>
		<td class="adminData">
			@Html.DropDownListFor(m => m.Gender, (IEnumerable<SelectListItem>)ViewBag.AvailableGenders, (string)ViewBag.DefaultGender)
			@Html.ValidationMessageFor(m => m.Gender)
		</td>
	</tr>	
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.AgeGroup)
		</td>
		<td class="adminData">
			@Html.DropDownListFor(m => m.AgeGroup, (IEnumerable<SelectListItem>)ViewBag.AvailableAgeGroups, (string)ViewBag.DefaultAgeGroup)
			@Html.ValidationMessageFor(m => m.AgeGroup)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Color)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(m => m.Color, new { placeholder = ViewBag.DefaultColor })
			@Html.ValidationMessageFor(m => m.Color)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Size)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(m => m.Size, new { placeholder = ViewBag.DefaultSize })
			@Html.ValidationMessageFor(m => m.Size)
		</td>
	</tr>	
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Material)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(m => m.Material, new { placeholder = ViewBag.DefaultMaterial })
			@Html.ValidationMessageFor(m => m.Material)
		</td>
	</tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(m => m.Pattern)
		</td>
		<td class="adminData">
			@Html.TextBoxFor(m => m.Pattern, new { placeholder = ViewBag.DefaultPattern })
			@Html.ValidationMessageFor(m => m.Pattern)
		</td>
	</tr>	
</table>