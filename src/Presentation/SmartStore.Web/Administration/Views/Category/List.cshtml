@model CategoryListModel
@using Telerik.Web.Mvc.UI
@{
    var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = T("Admin.Catalog.Categories.Manage").Text;
}
<div class="section-header">
    <div class="title">
        <i class="fa fa-sitemap"></i>
        @T("Admin.Catalog.Categories.Manage") @Html.ActionLink("(" + T("Admin.Catalog.Categories.SwitchToTreeView") + ")", "Tree")
    </div>
    <div class="options">
        <a href="@Url.Action("Create")" class="btn btn-primary"><i class="fa fa-plus"></i>&nbsp;@T("Admin.Common.AddNew")</a> <a href="@Url.Action("ExportXml")" class="btn">
			<i class="fa fa-arrow-circle-o-down"></i> @T("Admin.Common.ExportToXml")
		</a>
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchCategoryName)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => Model.SearchCategoryName)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchAlias)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => Model.SearchAlias)
        </td>
    </tr>
    <tr>
		<td class="adminTitle">
			&nbsp;
		</td>
        <td class="adminData">
            <button type="submit" id="btnSearch" class="btn"><i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")</button>
        </td>
    </tr>
</table>
<p></p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<CategoryModel>(Model.Categories.Data)
                    .Name("categories-grid")
                    .ClientEvents(events => events
                        .OnDataBinding("onDataBinding"))
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Breadcrumb).Title(T("Admin.Catalog.Categories.Fields.Name").Text)

                            .Template(x => Html.ActionLink(x.Name, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= Name #></a>");
						columns.Bound(x => x.Alias);
                        columns.Bound(x => x.Published)
                            .Width(100)
                            .Template(item => @Html.SymbolForBool(item.Published))
                            .ClientTemplate(@Html.SymbolForBool("Published"))
                            .Centered();
                        columns.Bound(x => x.DisplayOrder)
                            .Width(100)
                            .Centered();
                        columns.Bound(x => x.Id)
                            .Width(50)
                            .Centered()
                            .Template(x => Html.ActionLink(T("Admin.Common.Edit").Text, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\">" + T("Admin.Common.Edit").Text + "</a>")
                            .Title(T("Admin.Common.Edit").Text);
                    })
                    .Pageable(settings => settings.Total(Model.Categories.Total).PageSize(gridPageSize).Position(GridPagerPosition.Both))
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("List", "Category"))
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>
<script type="text/javascript">
    $(document).ready(function () {
        //search button
        $('#btnSearch').click(function () {
            //search
            var grid = $('#categories-grid').data('tGrid');
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });

        $("#@Html.FieldIdFor(model => model.SearchCategoryName), #@Html.FieldIdFor(model => model.SearchAlias)").keydown(function (event) {
            if (event.keyCode == 13) {
                $("#btnSearch").click();
                return false;
            }
        });
    });

    function onDataBinding(e) {
        var searchModel = {
        	SearchCategoryName: $('#@Html.FieldIdFor(model => model.SearchCategoryName)').val(),
        	SearchAlias: $('#@Html.FieldIdFor(model => model.SearchAlias)').val()
        };
        e.data = searchModel;
    }
</script>