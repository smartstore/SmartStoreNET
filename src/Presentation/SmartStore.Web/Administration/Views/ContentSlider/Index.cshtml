@model ContentSliderSettingsModel
@using SmartStore.Admin.Models.ContentSlider
@using Telerik.Web.Mvc.UI
@{
    ViewBag.Title = T("Admin.Configuration.ContentSlider").Text;
}

@using (Html.BeginForm())
{
	<div class="section-header">
		<div class="title">
			<i class="fa fa-ellipsis-h"></i>
			@T("Admin.Configuration.ContentSlider")
		</div>
		<div class="options">
			<button type="submit" name="save" value="save" class="btn btn-primary">
				<i class="fa fa-check"></i>
				@T("Admin.Common.Save")
			</button>
		</div>
	</div>

    <script type="text/javascript">

		$(document).ready(function () {

			$('#search-slides').click(function () {
				var grid = $('#content-slider-slides-grid').data('tGrid');
				grid.currentPage = 1;
				grid.ajaxRequest();
				return false;
			});

			$("#@Html.FieldIdFor(model => model.AutoPlay)").click(toggleAutoPlayDelay);

			toggleAutoPlayDelay();
		});

        function toggleAutoPlayDelay() {
            if ($('#@Html.FieldIdFor(model => model.AutoPlay)').is(':checked')) {
                $('#autoplaydelay').show();
            }
            else {
                $('#autoplaydelay').hide();
            }
        }

		function slidesGrid_onDataBinding(e) {
			var searchModel = {
				SearchStoreId: $('#SearchStoreId').val()
			};
			e.data = searchModel;
		}
    </script>
    
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.IsActive)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ContentSliderHeight)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ContentSliderHeight)
                @Html.ValidationMessageFor(model => model.ContentSliderHeight)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.BackgroundPictureId)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.BackgroundPictureId, "Picture", new { transientUpload = true })
                @Html.ValidationMessageFor(model => model.BackgroundPictureId)
            </td>
        </tr>

        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AutoPlay)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AutoPlay)
                @Html.ValidationMessageFor(model => model.AutoPlay)
            </td>
        </tr>

        <tr id="autoplaydelay">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AutoPlayDelay)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AutoPlayDelay)
                @Html.ValidationMessageFor(model => model.AutoPlayDelay)
            </td>
        </tr>

        <tr>
            <td colspan="2">
                <hr />
            </td>
        </tr>
    </table>

	<div class="slides-title">
		<div class="headline">
			@T("Admin.Configuration.ContentSlider.Slides")
		</div>
	</div>

	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.SearchStoreId)
			</td>
			<td class="adminData">
				@Html.DropDownList("SearchStoreId", Model.AvailableStores)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				&nbsp;
			</td>
			<td class="adminData">
				<button type="submit" id="search-slides" value="search-slides" class="btn"><i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")</button>
			</td>
		</tr>
	</table>

	<div class="pull-right">
		<a href="@Url.Action("CreateSlide")" class="btn btn-primary btn-above">
			<i class="fa fa-plus"></i>
			@T("Admin.Common.AddNew")
		</a>
	</div>

	<table class="adminContent">
		<tr>
			<td>
				@(Html.Telerik().Grid<ContentSliderSlideModel>(Model.Slides.OrderBy(s => s.LanguageName).ThenBy(s => s.DisplayOrder))
					.Name("content-slider-slides-grid")
					.Columns(columns =>
					{
						columns.Bound(x => x.Title)
							.Template(x => Html.ActionLink(x.Title, "EditSlide", new { index = x.SlideIndex }))
							.ClientTemplate("<a href=\"ContentSlider/EditSlide?index=<#= SlideIndex #>\"><#= Title #></a>");
						columns.Bound(x => x.DisplayOrder)
							.Centered()
							.Width(120);
						columns.Bound(x => x.LanguageName);
						columns.Bound(x => x.LimitedToStores)
							.Width(100)
							.Template(x => @Html.SymbolForBool(x.LimitedToStores))
							.ClientTemplate(@Html.SymbolForBool("LimitedToStores"))
							.Hidden(Model.StoreCount <= 1)
							.Centered();
						columns.Bound(x => x.Published)
							.Width(100)
							.Template(x => @Html.SymbolForBool(x.Published))
							.ClientTemplate(@Html.SymbolForBool("Published"))
							.Centered();
					})
					.DataBinding(dataBinding => dataBinding.Ajax().Select("SlideList", "ContentSlider"))
					.ClientEvents(events => events.OnDataBinding("slidesGrid_onDataBinding"))
					.EnableCustomBinding(true))
			</td>
		</tr>
	</table>
	
	<div class="pull-right">
		<a href="@Url.Action("CreateSlide")" class="btn btn-primary btn-below">
			<i class="fa fa-plus"></i>
			@T("Admin.Common.AddNew")
		</a>
	</div>
}