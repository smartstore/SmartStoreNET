@model ForumGroupModel

@using Telerik.Web.Mvc.UI;

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)

@Html.SmartStore().TabStrip().Name("forumgroup-edit").Items(x =>
{
	x.Add().Text(T("Admin.Common.General").Text).Content(TabInfo()).Selected(true);
	x.Add().Text(T("Admin.Common.Stores").Text).Content(TabStores());

	//generate an event
	EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "forumgroup-edit", this.Html, this.Model));
})

@helper TabInfo()
{
	@(Html.LocalizedEditor<ForumGroupModel, ForumGroupLocalizedModel>("forumgroup-localized",
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Name)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => Model.Locales[item].Name)
				@Html.ValidationMessageFor(model => model.Locales[item].Name)
			</td>
		</tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Locales[item].SeName)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Locales[item].SeName)
                @Html.ValidationMessageFor(model => model.Locales[item].SeName)
            </td>
        </tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Description)
			</td>
			<td class="adminData">
				@Html.TextAreaFor(model => model.Locales[item].Description, new { @class = "input-large" })
				@Html.ValidationMessageFor(model => model.Locales[item].Description)
			</td>
		</tr>
		<tr>
			<td colspan="2">
				@Html.HiddenFor(model => model.Locales[item].LanguageId)
			</td>
		</tr>
	</table>
    ,
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Name)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name)
			</td>
		</tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.SeName)
            </td>
            <td class="adminData">
                @Html.EditorFor(x => x.SeName)
				@if (Model.Id != 0)
                {
                    @Html.Action("NamesPerEntity", "UrlRecord", new { entityName = "NewsItem", entityId = @Model.Id })
                }
                @Html.ValidationMessageFor(model => model.SeName)
            </td>
        </tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Description)
			</td>
			<td class="adminData">
				@Html.TextAreaFor(model => model.Description, new { @class = "input-large" })
				@Html.ValidationMessageFor(model => model.Description)
			</td>
		</tr>
	</table>
	))

	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DisplayOrder)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.DisplayOrder)
				@Html.ValidationMessageFor(model => model.DisplayOrder)
			</td>
		</tr>
	</table>
}

@helper TabStores()
{
	<script type="text/javascript">
		$(document).ready(function () {
			$('#@Html.FieldIdFor(model => model.LimitedToStores)').change(function () {
				$('#pnl-available-stores').toggle($(this).is(':checked'));
			}).trigger('change');
		});
	</script>

	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.LimitedToStores)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.LimitedToStores)
				@Html.ValidationMessageFor(model => model.LimitedToStores)
			</td>
		</tr>
		<tr id="pnl-available-stores">
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.AvailableStores)
			</td>
			<td class="adminData">
				@if (Model.AvailableStores != null && Model.AvailableStores.Count > 0)
				{
					foreach (var store in Model.AvailableStores)
					{
						<label class="checkbox">
							<input type="checkbox" name="SelectedStoreIds" value="@store.Id" checked="@(Model.SelectedStoreIds != null && Model.SelectedStoreIds.Contains(store.Id))" />
							<span>@store.Name</span>
						</label>
					}
				}
				else
				{
					<div>@T("Admin.Configuration.Stores.NoStoresDefined")</div>
				}
			</td>
		</tr>
	</table>
}