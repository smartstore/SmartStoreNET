@model NewsItemListModel
@using Telerik.Web.Mvc.UI

@{
    var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    //page title
    ViewBag.Title = T("Admin.ContentManagement.News.NewsItems").Text;
}
<div class="section-header">
    <div class="title">
        <i class="fa fa-rss"></i>
        @T("Admin.ContentManagement.News.NewsItems")
    </div>
    <div class="options">
        <a href="@Url.Action("Create")" class="btn btn-primary"><i class="fa fa-plus"></i>&nbsp;@T("Admin.Common.AddNew")</a>
    </div>
</div>
<table width="100%">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchStoreId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchStoreId", Model.AvailableStores)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
			&nbsp;
		</td>
		<td class="adminData">
			<button type="button" id="search-newsitem" class="btn">
				<i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")
			</button>
        </td>
    </tr>
</table>
<p>
</p>
<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<NewsItemModel>()
                    .Name("newsitem-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(x => x.Title)
							.Width(450)
                            .Template(x => Html.ActionLink(x.Title, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\"><#= Title #></a>");
                        columns.Bound(x => x.LanguageName);
                        columns.Bound(x => x.Comments)
                            .Template(
                            @<div>
								@Html.ActionLink(T("Admin.ContentManagement.News.NewsItems.Fields.Comments").Text + " - " + @item.Comments, "Comments", new { filterByNewsItemId = item.Id })
                            </div>
                            )
                            .ClientTemplate("<div><a href=\"Comments?filterByNewsItemId=<#= Id #>\">" + T("Admin.ContentManagement.News.NewsItems.Fields.Comments").Text + " - <#= Comments #>" + "</a></div>");
                        columns.Bound(x => x.StartDate);
                        columns.Bound(x => x.EndDate);
                        columns.Bound(x => x.Published)
                            .Template(item => @Html.SymbolForBool(item.Published))
                            .ClientTemplate(@Html.SymbolForBool("Published"))
                            .Centered();
                        columns.Bound(x => x.CreatedOn);
                        columns.Bound(x => x.Id)
                            .Template(x => Html.ActionLink(T("Admin.Common.Edit").Text, "Edit", new { id = x.Id }))
                            .ClientTemplate("<a href=\"Edit/<#= Id #>\">" + T("Admin.Common.Edit").Text + "</a>")
                            .Width(50)
                            .Centered()
                            .HeaderTemplate(T("Admin.Common.Edit").Text)
                            .Filterable(false);
                    })
                    .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
                    .DataBinding(dataBinding => dataBinding.Ajax().Select("List", "News"))
					.ClientEvents(events => events.OnDataBinding("onDataBinding"))
					.PreserveGridState()
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>

<script type="text/javascript">

    $(document).ready(function () {
        //search button
        $('#search-newsitem').click(function () {
            //search
            var grid = $('#newsitem-grid').data('tGrid');
            //no paging support in this grid
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });
    });

    function onDataBinding(e) {
        var searchModel = {
            SearchStoreId: $('#SearchStoreId').val()
        };
        e.data = searchModel;
    }
</script>