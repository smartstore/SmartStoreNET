@model OrderModel.AddOrderProductModel
@{
    var gridPageSize = EngineContext.Current.Resolve<SmartStore.Core.Domain.Common.AdminAreaSettings>().GridPageSize;
    
    ViewBag.Title = string.Format(T("Admin.Orders.Products.AddNew.Title1").Text, Model.OrderId);
}
@using Telerik.Web.Mvc.UI;
<div class="section-header">
    <div class="title">
        @string.Format(T("Admin.Orders.Products.AddNew.Title1").Text, Model.OrderId) @Html.ActionLink("(" + T("Admin.Orders.Products.AddNew.BackToOrder") + ")", "Edit", new { id = Model.OrderId })
    </div>
    <div class="options">
    </div>
</div>

<div class="alert alert-info fade in">
	<button class="close" data-dismiss="alert">&#215;</button>
	@T("Admin.Orders.Products.AddNew.Note1")
</div>

<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchProductName)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => Model.SearchProductName)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchCategoryId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchCategoryId", Model.AvailableCategories, T("Admin.Common.All"))
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchManufacturerId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchManufacturerId", Model.AvailableManufacturers, T("Admin.Common.All"))
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.SearchProductTypeId)
        </td>
        <td class="adminData">
            @Html.DropDownList("SearchProductTypeId", Model.AvailableProductTypes, T("Admin.Common.All"))
        </td>
    </tr>
    <tr>
		<td class="adminTitle">
			&nbsp;
		</td>
		<td class="adminData">
            <button type="submit" id="search-products" value="search-products" class="btn btn-above">
				<i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")
			</button>
        </td>
    </tr>
</table>

<p></p>

<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<OrderModel.AddOrderProductModel.ProductModel>()
                    .Name("products-grid")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.Id)
							.Width(80);
                        columns.Bound(p => p.Name)
							.Template(p => @Html.LabeledProductName(0, p.Name, p.ProductTypeName, p.ProductTypeLabelHint))
							.ClientTemplate(@Html.LabeledProductName(null, "Name"));
                        columns.Bound(p => p.Sku);
                    })
                    .Selectable()
                    .Pageable(settings => settings.PageSize(gridPageSize).Position(GridPagerPosition.Both))
					.DataBinding(dataBinding => dataBinding.Ajax().Select("AddProductToOrder", "Order"))
                    .ClientEvents(events => events.OnDataBinding("onDataBinding").OnRowSelect("onRowSelected"))
					.PreserveGridState()
                    .EnableCustomBinding(true))
        </td>
    </tr>
</table>

<div id="productdetails">
</div>

@Html.HiddenFor(model => Model.OrderId)
<script type="text/javascript">
    $(document).ready(function () {
        $('#search-products').click(function () {
            var grid = $('#products-grid').data('tGrid');
            grid.currentPage = 1; //new search. Set page size to 1
            grid.ajaxRequest();
            return false;
        });
    });

    $("#@Html.FieldIdFor(model => model.SearchProductName)").keydown(function (event) {
        if (event.keyCode == 13) {
            $("#search-products").click();
            return false;
        }
    });

    function onDataBinding(e) {
        var searchModel = {
            SearchProductName: $('#@Html.FieldIdFor(model => model.SearchProductName)').val(),
            SearchCategoryId: $('#SearchCategoryId').val(),
            SearchManufacturerId: $('#SearchManufacturerId').val(),
            SearchProductTypeId: $('#SearchProductTypeId').val()
        };
        e.data = searchModel;
    }

    function onRowSelected(e) {
        productID = e.row.cells[0].innerHTML;
        //load "product details page" block
        var productDetailsActionUrl = '@Html.Raw(Url.Action("AddProductToOrderDetails", "Order", new { orderId = Model.OrderId, productId = "productidplaceholder" }))';
        productDetailsActionUrl = productDetailsActionUrl.replace("productidplaceholder", productID);
        setLocation(productDetailsActionUrl);
    }
</script>
