@model ShipmentModel
@using SmartStore.Core.Domain.Tax;
@using SmartStore.Core.Domain.Catalog;
@{
    ViewBag.Title = string.Format(T("Admin.Orders.Shipments.AddNew.Title").Text, Model.OrderId);
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            @string.Format(T("Admin.Orders.Shipments.AddNew.Title").Text, Model.OrderId) @Html.ActionLink("(" + T("Admin.Orders.Shipments.BackToOrder") + ")", "Edit", new { id = Model.OrderId })
        </div>
        <div class="options">
            <button type="submit" name="save" value="save" class="btn btn-primary"><i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")</button>
            <button type="submit" name="save" value="save-continue" class="btn">@T("Admin.Common.SaveContinue")</button>          
        </div>
    </div>
    @Html.ValidationSummary(false)

    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.TrackingNumber)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.TrackingNumber)
            </td>
        </tr>
    </table>
	
    <table class="adminContent">
        <tr>
            <td class="adminData">
                <h3>@T("Admin.Orders.Shipments.Products")</h3>
            </td>
        </tr>
        <tr>
			<td class="adminData" style="padding: 0;">

				<table class="table table-bordered table-striped">
					<thead>
						<tr>
							<th>
								@T("Admin.Orders.Shipments.Products.ProductName")
							</th>
							<th>
								@T("Admin.Orders.Shipments.Products.SKU")
							</th>
							<th>
								@T("Admin.Orders.Shipments.Products.QtyOrdered")
							</th>
							<th>
								@T("Admin.Orders.Shipments.Products.QtyShipped")
							</th>
							<th>
								@T("Admin.Orders.Shipments.Products.QtyToShip")
							</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var item in Model.Items)
						{
							<tr>
								<td style="width: 50%;">
									<div style="padding-left: 10px; padding-right: 10px; text-align: left;">
										@Html.LabeledProductName(item.ProductId, item.ProductName, item.ProductTypeName, item.ProductTypeLabelHint)
										@if (!String.IsNullOrEmpty(item.AttributeInfo))
										{
											<br />
											@Html.Raw(item.AttributeInfo)
										}
									</div>
								</td>
								<td style="width: 10%;">
									<div style="padding-left: 10px; padding-right: 10px; text-align: left;">
										@item.Sku
									</div>
								</td>
								<td align="center" style="width: 10%;">
									@item.QuantityOrdered
								</td>
								<td align="center" style="width: 10%;">
									@item.QuantityInAllShipments
								</td>
								<td align="center" style="width: 20%;">
									<input name="qtyToAdd@(item.OrderItemId)" type="text" value="@item.QuantityToAdd" id="qtyToAdd@(item.OrderItemId)" style="width:100px;" />
								</td>
							</tr>
						}
					</tbody>
				</table>

			</td>
        </tr>
    </table>
}