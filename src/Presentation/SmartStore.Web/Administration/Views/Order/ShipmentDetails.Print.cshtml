@model IEnumerable<ShipmentModel>
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Admin.Models.Shipping;
@using SmartStore.Services.Localization;
@using SmartStore.Core.Html;
@{

    Layout = "~/Views/Shared/_Print.cshtml";

    //title
    Html.AddTitleParts(T("Admin.Orders.Shipments.ViewDetails").Text);

    var pdfMode = ViewBag.PdfMode == true;
    if (!pdfMode)
    {
        Html.AddBodyCssClass("screen");
    }
}

@functions {
    private IHtmlString JoinValues(string[] values, string separator = " ")
    {
        var normalized = values.Where(x => x.HasValue());
        return MvcHtmlString.Create(String.Join(separator, normalized));
    }
}

<div class="container">
    @foreach (var shipment in Model)
    {
        var company = shipment.MerchantCompanyInfo;
        var address = shipment.ShippingAddress;

        var colWidths = new int[] { 50, 20, 10 };
    
        <div class="document">
            @Html.Widget("shipmentdetails_top")
            <!-- Address & Info -->
            <div class="clearfix">
                <div class="order-address margin-top-40 pull-left">
                    <div>
                        <span class="header text-smallest">
                            @{
                                var city = JoinValues(new string[] { company.ZipCode, company.City }).ToString();
                                var country = JoinValues(new string[] { company.CountryName, company.StateName }, ", ").ToString();
                            }
                            @JoinValues(new string[] { company.CompanyName, company.Street, company.Street2, city, country }, " &middot; ")
                        </span>
                    </div>
                    <div class="margin-top-10">
                        @if (address.Company.HasValue())
						{
                            <div>@address.Company</div>
                        }
                        <div>@JoinValues(new string[] { address.Salutation, address.Title, address.FirstName, address.LastName })</div>
                        @if (address.Address1.HasValue())
                        {
                            <div>@address.Address1</div>
                        }
                        @if (address.Address2.HasValue())
                        {
                            <div>@address.Address2</div>
                        }
                        @if (address.ZipPostalCode.HasValue() || address.City.HasValue())
                        {
                            <div>@JoinValues(new string[] { address.ZipPostalCode, address.City })</div>
                        }
                        @if (address.Country != null)
						{						
							if (address.StateProvince != null)
							{
								<div>@JoinValues(new string[] { address.Country.Name, address.StateProvince.Name }, ", ")</div>
							}
							else
							{
								<div>@JoinValues(new string[] { address.Country.Name }, ", ")</div>
							}
						}
                    </div>
                </div>

                @Html.Widget("shipmentdetails_orderinfo_top")

                <div class="order-info text-small pull-right">
                    <table>
                        <tr>
                            <td class="label">@T("PDFPackagingSlip.Shipment").Text.FormatWith(String.Empty):</td>
                            <td class="value">@shipment.Id</td>
                        </tr>
                        <tr>
                            <td class="label">@T("PDFPackagingSlip.Order").Text.FormatWith(String.Empty):</td>
                            <td class="value">@shipment.OrderId</td>
                        </tr>
                        <tr>
                            <td class="label">@T("PDFPackagingSlip.DeliveryDate"):</td>
                            <td class="value">@shipment.DeliveryDate</td>
                        </tr>
                        @if (!String.IsNullOrEmpty(shipment.TrackingNumber))
                        {
                            <tr>
                                <td class="label">@T("PDFPackagingSlip.TrackingNumber"):</td>
                                <td class="value">@shipment.TrackingNumber</td>
                            </tr>
                        }
                        <tr>
                            <td class="label">@T("PDFPackagingSlip.ShippingMethod"):</td>
                            <td class="value">@shipment.ShippingMethod</td>
                        </tr>
                    </table>

                    @Html.Widget("shipmentdetails_orderinfotable_after")
                </div>
                @Html.Widget("shipmentdetails_orderinfo_bottom")
            </div>

            @Html.Widget("shipmentdetails_lines_before")
            <h3 style="margin-top: 100px">@T("PDFPackagingSlip.ProductListHeadline")</h3>

            <table class="table order-summary">
                <thead>
                    <tr>
                        <th class="text-left" style="width: @(colWidths[0])%">@T("PDFPackagingSlip.ProductName")</th>
                        <th class="text-left" style="width: @(colWidths[2])%">@T("PDFPackagingSlip.SKU")</th>
                        <th class="text-left" style="width: @(colWidths[2])%">@T("PDFPackagingSlip.QTY")</th>
                        <th class="text-right" style="width: @(colWidths[1])%">@T("PDFPackagingSlip.Weight")</th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < shipment.Items.Count; i++)
                    {
                        var item = shipment.Items[i];
                        @ShipmentLine(item)
                    }
                </tbody>
            </table>
        </div>

    }
</div>

@helper ShipmentLine(ShipmentModel.ShipmentItemModel item)
{
    <tr>
        <td class="text-left">
            @item.ProductName

            @if (item.AttributeInfo.HasValue())
            {
                <div class="attributes  text-small">
                    @Html.Raw(item.AttributeInfo)
                </div>
            }

        </td>

        <td class="text-left">
            @item.Sku
        </td>
        <td class="text-left">
            @item.QuantityInThisShipment
        </td>
        @*<td class="text-left">
                @item.ItemDimensions
            </td>*@
        <td class="text-right">
            @item.ItemWeight
        </td>
    </tr>
}