@model SmartStore.Web.Framework.Plugins.ProviderModel

@{    
    ViewBag.Title = T("Admin.Common.Configure").Text + " - " + Model.FriendlyName;
}

<script>
	$(function () {
		Admin.movePluginActionButtons();
	});
</script>

<div class="section-header">
    <div class="title" title="@ViewBag.Title (@Model.SystemName)">
		<img src="@Url.Content(Model.IconUrl)" alt="@Model.FriendlyName" />
        @ViewBag.Title
		<a href="@ViewBag.ListUrl">(@T("Admin.Common.BackToList"))</a>
    </div>
	@if (Model.PluginDescriptor != null)
	{
		<div class="options">
			<a class="btn" href='@Url.Action("UpdateStringResources", "Plugin", new { systemName = Model.PluginDescriptor.SystemName, returnUrl = Request.RawUrl })'>
				<i class="fa fa-refresh"></i>
				@T("Admin.Configuration.Plugins.Resources.Update")
			</a>
		</div>		
	}
</div>

<div class="plugin-config-container">
	@if (Model.ConfigurationRoute != null && Model.ConfigurationRoute.Action.HasValue())
	{
		try
		{
			Html.RenderAction(Model.ConfigurationRoute.Action, Model.ConfigurationRoute.Controller, Model.ConfigurationRoute.RouteValues);
		}
		catch (Exception exception)
		{
			<div class="alert alert-error">
				@T("Admin.Configuration.Plugins.UnknownError")
			</div>

			<pre>@exception.ToString()</pre>
		}
	}
	else
	{
		@T("Admin.Common.ConfigurationNotRequired")
	}
</div>