@model ProductVariantAttributeCombinationModel

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)@*otherwise we get a model state error*@

@if (ViewBag.RefreshPage == true)
{
    <script type="text/javascript">
    try {window.opener.document.forms['@(ViewBag.formId)'].@(ViewBag.btnId).click();}
    catch (e){} 
    window.close();
    </script>
}

<div class="well" style="margin-bottom:8px;">
	@if (ViewBag.IsEdit)
	{
		<div>
			@Html.Raw(Html.TableFormattedVariantAttributes(Model.AttributesXml))
		</div>
	}
	else
	{
		<div id="ProductVariantAttributeContainer">
			@Html.Partial("_ProductAttributes", Model.ProductVariantAttributes)
		</div>
	}
</div>

@if (!ViewBag.IsEdit)
{
	<div id="CombinationExistenceNote">
		@if (Model.Warnings.Count > 0)
		{
			<div class="alert alert-warning fade in">
				@foreach (var warning in Model.Warnings)
				{
					<p><i class="fa fa-exclamation-triangle"></i>&nbsp;@warning</p>
				}
			</div>
		}
	</div>
}

<div>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.IsActive)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.IsActive)
                @Html.ValidationMessageFor(model => model.IsActive)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2"><hr /></td>
        </tr>
		<tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AssignedPictureIds)
            </td>
            <td class="adminData">
                @foreach (var x in Model.AssignablePictures)
                {
                    <div class="pull-left" style="min-width:80px; min-height:65px; margin:1px 25px 1px 0;">
                        <label class="x-checkbox">
                            <input type="checkbox" name="AssignedPictureIds" value="@x.Id" @Html.Attr("checked", "checked", x.IsAssigned) />
                            <img src="@x.PictureUrl" style="max-width:50px; max-height:50px; vertical-align:middle;" />
                        </label>
                    </div>
                }
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Sku)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Sku)
                @Html.ValidationMessageFor(model => model.Sku)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.ManufacturerPartNumber)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ManufacturerPartNumber)
                @Html.ValidationMessageFor(model => model.ManufacturerPartNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Gtin)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Gtin)
                @Html.ValidationMessageFor(model => model.Gtin)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Price)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Price)
                @Html.ValidationMessageFor(model => model.Price)
            </td>
        </tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DeliveryTimeId)
			</td>
			<td class="adminData">
				@Html.DropDownListFor(model => model.DeliveryTimeId, Model.AvailableDeliveryTimes, T("Common.Unspecified"))
				@Html.ValidationMessageFor(model => model.DeliveryTimeId)
			</td>
		</tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.BasePriceBaseAmount)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.BasePriceBaseAmount)
                @Html.ValidationMessageFor(model => model.BasePriceBaseAmount)
            </td>
        </tr>
		<tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.BasePriceAmount)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.BasePriceAmount)
                @Html.ValidationMessageFor(model => model.BasePriceAmount)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2"><hr /></td>
        </tr>
        <tr id="pnlLength">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Length)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Length)
                @Html.ValidationMessageFor(model => model.Length)
            </td>
        </tr>
        <tr id="pnlWidth">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Width)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Width)
                @Html.ValidationMessageFor(model => model.Width)
            </td>
        </tr>
        <tr id="pnlHeight">
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.Height)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.Height)
                @Html.ValidationMessageFor(model => model.Height)
            </td>
        </tr>
        <tr class="adminSeparator">
            <td colspan="2"><hr /></td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.StockQuantity)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.StockQuantity)
                @Html.ValidationMessageFor(model => model.StockQuantity)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.SmartLabelFor(model => model.AllowOutOfStockOrders)
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AllowOutOfStockOrders)
                @Html.ValidationMessageFor(model => model.AllowOutOfStockOrders)
            </td>
        </tr>
    </table>
</div>

<script type="text/javascript">
	$(document).ready(function () {
		var container = $('#ProductVariantAttributeContainer'),
			note = $('#CombinationExistenceNote');

		container.find('select').selectWrapper();

		container.change(function() {
			note.empty();
			container.closest('form').doAjax({
				smallIcon: note,
				url: '@Url.Action("CombinationExistenceNote", "Product", new { productId = Model.ProductId })',
				callbackSuccess: function (resp) {
					var cls = (resp.HasWarning ? 'warning' : 'info'),
						ico = (resp.HasWarning ? 'warning-sign' : 'ok-sign');

					note.html('<div class="alert alert-' + cls + '" style="margin:0;"><i class="fa fa-' + ico + '"></i>&nbsp;' + resp.Message + '</div>');
				}
			});
		});
	});
</script>

