@model ReturnRequestModel
@using SmartStore.Core.Domain.Orders;
@using Telerik.Web.Mvc.UI;

@Html.ValidationSummary(false)
@Html.HiddenFor(model => model.Id)

@if (Model.ReturnRequestInfo.HasValue())
{
	<div class="alert alert-info fade in">
		<button class="close" data-dismiss="alert">&#215;</button>
		@Html.Raw(Model.ReturnRequestInfo)
	</div>
}

<table class="adminContent">
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Id)
        </td>
        <td class="adminData">
            @Model.Id
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.OrderId)
        </td>
        <td class="adminData">
			<a href="@Url.Action("Edit", "Order", new { id = Model.OrderId })">@Model.OrderNumber</a>
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.StoreName)
        </td>
        <td class="adminData">
            @Html.DisplayFor(model => model.StoreName)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ProductName)
        </td>
        <td class="adminData">
			<a href="@Url.Action("Edit", "Product", new { id = Model.ProductId })">@Model.ProductName (@Model.ProductSku.NaIfEmpty())</a>
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CustomerId)
        </td>
        <td class="adminData">
			<a href="@Url.Action("Edit", "Customer", new { id = Model.CustomerId })">@Model.CustomerFullName (@Model.CustomerId)</a>
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.Quantity)
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.Quantity)
            @Html.ValidationMessageFor(model => model.Quantity)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ReturnRequestStatusId)
        </td>
        <td class="adminData">
            @Html.DropDownListFor(model => model.ReturnRequestStatusId, ((ReturnRequestStatus)Model.ReturnRequestStatusId).ToSelectList())
            @Html.ValidationMessageFor(model => model.ReturnRequestStatusId)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.ReasonForReturn)
        </td>
        <td class="adminData">
			@Html.DropDownListFor(model => model.ReasonForReturn, Model.AvailableReasonForReturn, new { style = "min-width: 514px;" })
            @Html.ValidationMessageFor(model => model.ReasonForReturn)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.RequestedAction)
        </td>
        <td class="adminData">
			@Html.DropDownListFor(model => model.RequestedAction, Model.AvailableRequestedAction, new { style = "min-width: 514px;" })
            @Html.ValidationMessageFor(model => model.RequestedAction)
        </td>
    </tr>
	@if(Model.RequestedActionUpdated.HasValue)
	{
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.RequestedActionUpdated)
			</td>
			<td class="adminData">
				@Html.DisplayFor(model => model.RequestedActionUpdated)
			</td>
		</tr>		
	}
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CustomerComments)
        </td>
        <td class="adminData">
            @Html.TextAreaFor(model => model.CustomerComments, new { style = "min-width: 500px; min-height: 100px;" })
            @Html.ValidationMessageFor(model => model.CustomerComments)
        </td>
    </tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.StaffNotes)
        </td>
        <td class="adminData">
            @Html.TextAreaFor(model => model.StaffNotes, new { style = "min-width: 500px; min-height: 100px;" })
            @Html.ValidationMessageFor(model => model.StaffNotes)
        </td>
    </tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.AdminComment)
		</td>
		<td class="adminData">
			@Html.TextAreaFor(model => model.AdminComment, new { style = "min-width: 500px; min-height: 100px;" })
			@Html.ValidationMessageFor(model => model.AdminComment)
		</td>
	</tr>
    <tr>
        <td class="adminTitle">
            @Html.SmartLabelFor(model => model.CreatedOn)
        </td>
        <td class="adminData">
            @Html.DisplayFor(model => model.CreatedOn)
        </td>
    </tr>
	<tr>
		<td class="adminTitle">
			@Html.SmartLabelFor(model => model.UpdatedOn)
		</td>
		<td class="adminData">
			@Html.DisplayFor(model => model.UpdatedOn)
		</td>
	</tr>
</table>
