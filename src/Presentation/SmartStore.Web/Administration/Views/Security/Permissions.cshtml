@using SmartStore.Utilities;
@model PermissionMappingModel
@{               
    ViewBag.Title = T("Admin.Configuration.ACL").Text;
}
@using (Html.BeginForm())
{
    <div class="section-header">
        <div class="title">
            <i class="fa fa-lock"></i>
            @T("Admin.Configuration.ACL")
        </div>
        <div class="options">
            <button type="submit" name="save" value="save" class="btn btn-primary">
				<i class="fa fa-check"></i>&nbsp;@T("Admin.Common.Save")
			</button>
        </div>
    </div>
    
    <table class="adminContent">
        <tr>
            <td>
                @if (Model.AvailablePermissions.Count == 0)
				{
					<div class="alert alert-warning">
						@T("Admin.System.Warnings.NoPermissionsDefined")
					</div>
				}
				else if (Model.AvailableCustomerRoles.Count == 0)
				{
					<div class="alert alert-warning">
						@T("Admin.System.Warnings.NoCustomerRolesDefined")
					</div>
                }
                else
                {
                    <div class="t-widget t-grid">
                        <table class="table table-hover" cellspacing="0" rules="all" border="0">
                            <thead  class="t-grid-header">
                                <tr>
                                    <th class="t-header" scope="col">
                                        <span class="t-link">@T("Admin.Configuration.ACL.Permission")</span>
                                    </th>
                                    @foreach (var cr in Model.AvailableCustomerRoles)
                                    {
                                        <th class="t-header" scope="col" style="text-align:center">
                                            <span class="t-link">@cr.Name</span>
                                        </th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var pr in Model.AvailablePermissions)
                                {
                                    <tr>
                                        <td>
											<span class="label label-smnet @pr.CategoryLabel">@Inflector.Titleize(pr.Category).NaIfEmpty()</span>
                                            <span>@pr.Name</span>
                                        </td>
                                        @foreach (var cr in Model.AvailableCustomerRoles)
                                        {
                                            var allowed = Model.Allowed.ContainsKey(pr.SystemName) && Model.Allowed[pr.SystemName][cr.Id];
                                            <td align="center">
                                                <input id="allow_@(cr.Id)" class="allow_@(cr.Id)" type="checkbox" value="@(pr.SystemName)" name="allow_@(cr.Id)" @(allowed ? " checked=checked" : null) />
                                            </td>
                                        }
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
            </td>
        </tr>
    </table>
}
