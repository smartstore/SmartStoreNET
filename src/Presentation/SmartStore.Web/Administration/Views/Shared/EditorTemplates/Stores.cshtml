@using System.Globalization;
@{
    var id = ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty);
    var name = ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty);
    var strValue = Value;
    var url = Url.Action("AllStores", "Store", new { selectedIds = strValue, area = "admin" });

    var htmlAttributes = new RouteValueDictionary(ViewData["htmlAttributes"] ?? new object());
    var attributes = new RouteValueDictionary();

    foreach (var item in htmlAttributes)
    {
        attributes[item.Key.StartsWith("data_") ? item.Key.Replace("_", "-") : item.Key] = item.Value;
    }
    if (!attributes.ContainsKey("data-placeholder"))
    {
        attributes["data-placeholder"] = T("Admin.Common.StoresAll").Text;
    }
    if (!attributes.ContainsKey("multiple") && GetMetadata<bool>("multiple"))
    {
        attributes["multiple"] = "multiple";
    }
}
<select id="@id" name="@name" class="form-control" data-select-url="@url" @Html.Attrs(attributes)></select>
<script>
    $(function () {
        var ctrl = $('#@id');
        if (!_.isEmpty('@strValue')) {
            $.ajax({
                url: '@url',
                dataType: 'json',
                success: function (data) {
                    _.each(data, function (item) {
                        var option = new Option(item.text, item.id, item.selected, item.selected);
                        ctrl.append(option);
                    });
                },
                complete: function () {
                    ctrl.selectWrapper();
                }
            });
        }
        else {
            ctrl.selectWrapper();
        }
    });
</script>

@functions
{
    private string Value
    {
        get
        {
            if (ViewData.Model != null)
            {
                // Be careful with the conversion here because it's very vulnerable to errors.
                if (ViewData.Model is int[])
                {
                    return string.Join(",", ViewData.Model);
                }

                if (CommonHelper.TryConvert(ViewData.Model, typeof(string), CultureInfo.InvariantCulture, out object obj) && obj != null)
                {
                    return obj.ToString();
                }
            }

            return null;
        }
    }
}
