@model ShippingMethodModel
@using Telerik.Web.Mvc.UI;

@Html.ValidationSummary(true)
@Html.HiddenFor(model => model.Id)

@Html.SmartStore().TabStrip().Name("shipping-method-edit").Items(x =>
{
	x.Add().Text(T("Admin.Common.General").Text).Content(TabGeneral()).Selected(true);
	x.Add().Text(T("Admin.Common.Restrictions").Text).Content(TabRestrictions());

	EngineContext.Current.Resolve<IEventPublisher>().Publish(new TabStripCreated(x, "shipping-method-edit", this.Html, this.Model));
})

@helper TabGeneral()
{
	@(Html.LocalizedEditor<ShippingMethodModel, ShippingMethodLocalizedModel>("shipping-method-localized",
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Name)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => Model.Locales[item].Name)
				@Html.ValidationMessageFor(model => model.Locales[item].Name)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Locales[item].Description)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.Locales[item].Description, Html.RichEditorFlavor())
				@Html.ValidationMessageFor(model => model.Locales[item].Description)
			</td>
		</tr>
		<tr>
			<td colspan="2">
				@Html.HiddenFor(model => model.Locales[item].LanguageId)
			</td>
		</tr>
	</table>
	,
	@<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Name)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.Name)
				@Html.ValidationMessageFor(model => model.Name)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.Description)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.Description, Html.RichEditorFlavor())
				@Html.ValidationMessageFor(model => model.Description)
			</td>
		</tr>
	</table>
	))

	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.DisplayOrder)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.DisplayOrder)
				@Html.ValidationMessageFor(model => model.DisplayOrder)
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.IgnoreCharges)
			</td>
			<td class="adminData">
				@Html.EditorFor(model => model.IgnoreCharges)
				@Html.ValidationMessageFor(model => model.IgnoreCharges)
			</td>
		</tr>
	</table>
}

@helper TabRestrictions()
{
	<div class="alert alert-info">
		@Html.Raw(T("Admin.Configuration.Shipping.Methods.RestrictionNote"))
	</div>

	<div>
		<table class="adminContent">
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.ExcludedCustomerRoleIds)
				</td>
				<td class="adminData">
					@Html.ListBoxFor(model => model.ExcludedCustomerRoleIds,
						new MultiSelectList(Model.AvailableCustomerRoles, "Value", "Text"),
						new { multiple = "multiple", @class = "control-xlarge" })
					@Html.ValidationMessageFor(model => model.ExcludedCustomerRoleIds)
				</td>
			</tr>
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.ExcludedCountryIds)
				</td>
				<td class="adminData">
					@Html.ListBoxFor(model => model.ExcludedCountryIds,
						new MultiSelectList(Model.AvailableCountries, "Value", "Text"),
						new { multiple = "multiple", @class = "control-xlarge" })
					@Html.ValidationMessageFor(model => model.ExcludedCountryIds)
				</td>
			</tr>
			<tr>
				<td class="adminTitle">
					@Html.SmartLabelFor(model => model.CountryExclusionContext)
				</td>
				<td class="adminData">
					@Html.DropDownListFor(model => model.CountryExclusionContext, Model.AvailableCountryExclusionContextTypes)
					@Html.ValidationMessageFor(model => model.CountryExclusionContext)
				</td>
			</tr>
		</table>
	</div>
}
