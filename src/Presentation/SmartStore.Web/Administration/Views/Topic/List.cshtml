@model TopicListModel
@using Telerik.Web.Mvc.UI
@{    
    ViewBag.Title = T("Admin.ContentManagement.Topics").Text;
}
<div class="section-header">
    <div class="title">
        <i class="fa fa-file-o"></i>
        @T("Admin.ContentManagement.Topics")
    </div>
    <div class="options">
        <a href="@Url.Action("Create")" class="btn btn-primary">
			<i class="fa fa-plus"></i>
			@T("Admin.Common.AddNew")
		</a>
    </div>
</div>

@if (Model.AvailableStores.Count > 1)
{
	<table class="adminContent">
		<tr>
			<td class="adminTitle">
				@Html.SmartLabelFor(model => model.SearchStoreId)
			</td>
			<td class="adminData">
				@Html.DropDownList("SearchStoreId", Model.AvailableStores, T("Admin.Common.All"))
			</td>
		</tr>
		<tr>
			<td class="adminTitle">
				&nbsp;
			</td>
			<td class="adminData">
				<button type="button" id="search-topics" class="btn">
					<i class="fa fa-search"></i>&nbsp;@T("Admin.Common.Search")
				</button>
			</td>
		</tr>
	</table>
}

<p></p>

<table class="adminContent">
    <tr>
        <td>
            @(Html.Telerik().Grid<TopicModel>()
					.Name("topics-grid")
					.Columns(columns =>
					{
						columns.Bound(x => x.SystemName)
							.Width(280)
							.Template(x => Html.ActionLink(x.SystemName, "Edit", new { id = x.Id }))
							.ClientTemplate("<a href='Edit/<#= Id #>'><#= SystemName #></a>");
						columns.Bound(x => x.Title);
						columns.Bound(x => x.IsPasswordProtected)
							.Template(item => @Html.SymbolForBool(item.IsPasswordProtected))
							.ClientTemplate(@Html.SymbolForBool("IsPasswordProtected"))
							.Centered();
						columns.Bound(x => x.IncludeInSitemap)
							.Template(item => @Html.SymbolForBool(item.IncludeInSitemap))
							.ClientTemplate(@Html.SymbolForBool("IncludeInSitemap"))
							.Centered();
						columns.Bound(x => x.RenderAsWidget)
							.Template(item => @Html.SymbolForBool(item.RenderAsWidget))
							.ClientTemplate(@Html.SymbolForBool("RenderAsWidget"))
							.Centered();
						columns.Bound(x => x.WidgetZone);
						columns.Bound(x => x.LimitedToStores)
							.Template(item => @Html.SymbolForBool(item.LimitedToStores))
							.ClientTemplate(@Html.SymbolForBool("LimitedToStores"))
							.Hidden(Model.AvailableStores.Count <= 1)
							.Centered();
						columns.Bound(x => x.Priority)
							.Centered();
					})
					.DataBinding(dataBinding => dataBinding.Ajax().Select("List", "Topic"))
					.ClientEvents(events => events.OnDataBinding("onDataBinding"))
					.EnableCustomBinding(true))
        </td>
    </tr>
</table>

<script type="text/javascript">

	$(document).ready(function () {
		//search button
		$('#search-topics').click(function () {
			//search
			var grid = $('#topics-grid').data('tGrid');
			//no paging support in this grid
			//grid.currentPage = 1; //new search. Set page size to 1
			grid.ajaxRequest();
			return false;
		});
	});

	function onDataBinding(e) {
		var searchModel = {
			SearchStoreId: $('#SearchStoreId').val()
		};
		e.data = searchModel;
	}
</script>
