@model EditForumTopicModel
@using SmartStore.Core.Domain.Forums;
@using SmartStore.Services.Forums;
@using SmartStore.Services.Seo;
@using SmartStore.Web;
@using SmartStore.Web.Models.Boards;
@using (Html.BeginForm())
{
    <div class="page post-edit">
        @Html.Action("ForumBreadcrumb", new { forumId = Model.ForumId, forumTopicId = Model.Id })

        <div class="title">
            <h2>
                @if (Model.IsEdit)
                {
                    @T("Forum.EditTopic")
                }
                else
                {
                    @T("Forum.NewTopic")
                }
            </h2>
        </div>
        <div class="wrapper">
            <div class="message-error">
                @Html.ValidationSummary(true)
            </div>
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.ForumId)

            <table class="post-topic">
                <tr>
                    <td class="fieldname">
                        @T("Forum.ForumName")
                    </td>
                    <td>
                        @Model.ForumName
                    </td>
                </tr>
                <tr>
                    <td class="fieldname">
                        @T("Forum.TopicTitle")
                    </td>
                    <td>
                        @Html.TextBoxFor(model => model.Subject, new { @class = "forum-topic-title-text" })
                        @Html.ValidationMessageFor(model => model.Subject)
                    </td>
                </tr>
                <tr>
                    <td class="fieldname"></td>
                    <td>
                        @if (Model.ForumEditor == EditorType.BBCodeEditor)
                        {
                            @Html.BBCodeEditor("Text");
                        }
                        @Html.TextAreaFor(model => model.Text, new { @class = "forum-post-text", TextMode = "MultiLine" })
                        @Html.ValidationMessageFor(model => model.Text)
                    </td>
                </tr>
                @if (Model.IsCustomerAllowedToSetTopicPriority)
                {
                    <tr>
                        <td class="fieldname">
                            @T("Forum.Priority")
                        </td>
                        <td>
                            @Html.DropDownList("TopicTypeId", new SelectList(@Model.TopicPriorities, "Value", "Text", @Model.TopicTypeId))
                        </td>
                    </tr>
                }
                @if (Model.IsCustomerAllowedToSubscribe)
                {
                    <tr>
                        <td class="fieldname">
                            @*@T("Forum.Options")*@
                        </td>
                        <td class="subscribe-to-post">
                            @Html.CheckBox("Subscribed", @Model.Subscribed, new { style="vertical-align:top" })
                            @Html.Label("Subscribed", @T("Forum.NotifyWhenSomeonePostsInThisTopic").Text, new { style="display:inline-block" })

                            @*@Html.ControlGroupFor(model => model.Subscribed, editorType: InputEditorType.Checkbox, helpHint: T("Forum.NotifyWhenSomeonePostsInThisTopic").Text)*@

                            @*@Html.EditorFor(model => model.Subscribed)
                            @Html.LabelFor(model => model.Subscribed, @T("Forum.NotifyWhenSomeonePostsInThisTopic").Text)*@
                        </td>
                    </tr>
                }
                <tr>
                    <td colspan="2" class="options">
                        @*<input type="submit" value="@T("Forum.Submit")" class="button-1 submit-forum-topic-button" />
                        <input type="button" class="button-2 cancel-forum-topic-button" value="@T("Forum.Cancel")" 
                        onclick="setLocation('@Url.RouteUrl("ForumSlug", new { id = Model.ForumId, slug = Model.ForumSeName })')" />*@

                        <button type="submit" class="btn btn-primary">
                            <i class="fa fa-reply"></i>
                            @T("Forum.Submit")
                        </button>
                        <button class="btn" onclick="setLocation('@Url.RouteUrl("ForumSlug", new { id = Model.ForumId, slug = Model.ForumSeName }) '); return false;">
							<i class="fa fa-times"></i>
                            @T("Forum.Cancel")
                        </button>

                    </td>
                </tr>
            </table>
        </div>
    </div>
}
