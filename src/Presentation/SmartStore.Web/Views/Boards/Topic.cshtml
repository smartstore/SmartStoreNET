@model ForumTopicPageModel
@using SmartStore.Web.Models.Boards;
@using SmartStore.Web.Models.Common;
@using SmartStore.Web.Framework.UI;
@{
    Layout = "_Layout";
    Html.AddTitleParts(Model.Subject);
    Html.AddMetaDescriptionParts(Model.Subject);
}

<script type="text/javascript">
    function handleTopicWatch(context) {
        $('.watch-topic-link-button').text(context.Text);
    }
</script>

<div class="page forum-topic">
    @{ Html.RenderPartial("_SearchBox"); }
    
    <div class="title">
        <h2>@Model.Subject</h2>
    </div>
    
    @if (Model.IsCustomerAllowedToEditTopic || Model.IsCustomerAllowedToDeleteTopic || Model.IsCustomerAllowedToMoveTopic) 
    {
        <div class="manage btn-group my-3">
            @if (Model.IsCustomerAllowedToEditTopic)
			{
				<a href='@Url.Action("TopicEdit", new { id = Model.Id })' class="btn btn-secondary" rel="nofollow">
					<i class="fa fa-pencil-square-o"></i>
                    <span>@T("Forum.EditTopic")</span>
				</a>
			}
            @if (Model.IsCustomerAllowedToDeleteTopic)
			{
				<a href='@Url.Action("TopicDelete", new { id = Model.Id })' class="btn btn-secondary" rel="nofollow" onclick='@(String.Format("return confirm('{0}');", T("Common.AreYouSure").Text))'>
					<i class="fa fa-trash-o"></i>
					<span>@T("Forum.DeleteTopic")</span>
				</a>
			}
            @if (Model.IsCustomerAllowedToMoveTopic)
			{
				<a href='@Url.Action("TopicMove", new { id = Model.Id })' class="btn btn-secondary" rel="nofollow">
					<i class="fa fa-arrows"></i>
					<span>@T("Forum.MoveTopic")</span>
				</a>
			}
        </div>
    }

    @ButtonBar()

    <div class="posts">
        @foreach (var post in @Model.ForumPostModels)
        {
            Html.RenderPartial("_ForumPost", post);
        }
    </div>

    @ButtonBar()

</div>

@helper ButtonBar()
{
    var pager = Html.SmartStore().Pager(Model.PostsPageIndex, Model.PostsPageSize, Model.PostsTotalRecords)
        .Name("paginator")
        .Size(PagerSize.Small)
        .Alignment(PagerAlignment.Centered)
        .Route("TopicSlug", new RouteValues { id = Model.Id, slug = Model.SeName });

    <div class="topic-options clearfix my-2">

        <button class="btn btn-primary" onclick="setLocation('@Url.Action("PostCreate", new { id = @Model.Id })')">
            <i class="fa fa-share"></i>
            <span>@T("Forum.Reply")</span>
        </button>

        @if (Model.IsCustomerAllowedToSubscribe)
        {
            <div class="float-right mt-3">
                <i class="fa fa-bookmark"></i>
                @Ajax.ActionLink(Model.WatchTopicText,
                    "TopicWatch",
                    new { id = @Model.Id },
                    new AjaxOptions { HttpMethod = "Post", OnSuccess = "handleTopicWatch" },
                    new { @class = "watch-topic-link-button" })
            </div>
        }

        @pager
    </div>
}