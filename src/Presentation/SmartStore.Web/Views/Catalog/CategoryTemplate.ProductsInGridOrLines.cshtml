@model CategoryModel

@{
	Layout = "~/Views/Shared/_ColumnsThree.cshtml";
	//Layout = "~/Views/Shared/_ColumnsTwo.cshtml";
	Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
	Html.AddMetaDescriptionParts(Model.MetaDescription);
	Html.AddMetaKeywordParts(Model.MetaKeywords);

	var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
	if (canonicalUrlsEnabled) {
		var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
		Html.AddCanonicalUrlParts(categoryUrl);
	}
}

@using SmartStore.Core;
@using SmartStore.Core.Domain.Catalog;
@using SmartStore.Core.Domain.Common;
@using SmartStore.Core.Domain.Seo;
@using SmartStore.Core.Infrastructure;
@using SmartStore.Web;
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web.Framework.UI;

@functions
{
	private bool ShowListOptions()
	{
		return Model.Products.Count > 0 &&
			   (Model.PagingFilteringContext.AllowProductViewModeChanging ||
			   Model.PagingFilteringContext.AllowProductSorting ||
			   Model.PagingFilteringContext.AllowCustomersToSelectPageSize);
	}
}

@helper SubCategoryList()
{
	<div class="category-grid sub-category-grid">
		@(Html.DataList<CategoryModel.SubCategoryModel>(Model.SubCategories, 3,
			@<article class="item-box equalized-column" data-equalized-column-name="subcat">
				<div class="category-item sub-category-item">
					<h2 class="category-title">
						<a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">@item.Name</a>
					</h2>
					<div class="picture">
						@if (item.PictureModel.ImageUrl.HasValue())
						{
							<a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
								<img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl" title="@item.PictureModel.Title" />
							</a>
						}
					</div>
				</div>
			</article>
		))
	</div>
}

<div class="page category-page">
    @if (Model.DisplayCategoryBreadcrumb) {
        <ul id="breadcrumb" class="breadcrumb">
            <li>
                <a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")"><i class="fa fa-home" style="text-decoration: none"></i></a> 
                <span class="divider">/</span>
            </li>

            @for (int i = 0; i < Model.CategoryBreadcrumb.Count; i++) {
				var menuItem = Model.CategoryBreadcrumb[i];
				var isLastCategory = menuItem.EntityId == Model.Id;
                <li>
                    @if (isLastCategory) {
                        @menuItem.Text
					}
					else {
                        <a href="@menuItem.GenerateUrl(this.Url)" title="@menuItem.Text">@menuItem.Text</a>
                        <span class="divider">/</span>
					}
                </li>
			}
        </ul>
        @Html.Widget("categorydetails_after_breadcrumb")
	}

    <div class="page-title">
        <h1>@(Model.FullName.HasValue() ? Model.FullName : Model.Name)</h1>
    </div>
    <div class="page-body">
        @Html.Widget("categorydetails_top")
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description)) {
            <div class="category-description">
                @Html.Raw(Html.CollapsedText(Model.Description))
            </div>
        }

        @*subcategories*@
        @if (Model.SubCategories.Count > 0 && Model.SubCategoryDisplayType == SubCategoryDisplayType.AboveProductList)
        {    
            @Html.Widget("categorydetails_before_subcategories")
            @SubCategoryList()
        }
        
        @*featured products*@
        @Html.Widget("categorydetails_before_featured_products")

        @if (Model.FeaturedProducts.Count > 0) {
            <div class="featured-product-grid product-list scroll">
                <div class="section-title">
                    @T("Products.FeaturedProducts")
                </div>
                <div class="pl-row row">
                    @foreach (var item in Model.FeaturedProducts) {
                        <article class="item-box product-compact span4 equalized-column" data-equalized-deep="true">
                            @Html.Partial("_ProductBoxCompact", @item)
                        </article>
					}
                </div>
                <a class="sb invisible pl-scroll-prev sb-dir-left disabled" href="#" rel="nofollow"><</a>
			    <a class="sb invisible pl-scroll-next sb-dir-right" href="#" rel="nofollow">></a>
            </div>
            <script type="text/javascript">
                $(function () {
                    $(".featured-product-grid").productListScroller();
                });
            </script>
		}
        @Html.Widget("categorydetails_after_featured_products")

        @if (ShowListOptions()) {
            @Html.Partial("_ProductListOptions", Model.PagingFilteringContext)
		}
		
        @*product list*@
        @Html.Widget("categorydetails_before_product_list")

		<div class="product-list-container">
			@if (Model.Products.Count > 0) {
	           if (Model.PagingFilteringContext.ViewMode == "list") {
				    @*list mode*@
				    <div class="product-list">
					    @foreach (var product in Model.Products) {
						    <article class="item-box details">
							    @Html.Partial("_ProductBoxList", product)
						    </article>   
	                    }
				    </div>       
	           }
	           else {
				    @*grid mode*@
				    <div class="product-grid">
					    @(Html.DataList<ProductOverviewModel>(Model.Products, 3,
						    @<article class="item-box">
							    @Html.Partial("_ProductBox", item)
						    </article>
					    ))
				    </div>
	           }
           }

			@Html.SmartStore().Pager(Model.PagingFilteringContext).Name("pagination-bottom").QueryParam("pagenumber")
		</div>

		@if (Model.BottomDescription.HasValue())
		{
			<div class="category-description">
				@Html.Raw(Html.CollapsedText(Model.BottomDescription))
			</div>
		}

		@*subcategories*@
		@if (Model.SubCategories.Count > 0 && Model.SubCategoryDisplayType == SubCategoryDisplayType.Bottom)
		{
			@Html.Widget("categorydetails_before_subcategories")
			@SubCategoryList()
		}

        @Html.Widget("categorydetails_bottom")
    </div>
</div>

@section right_top
{
    @Html.Widget("categorydetails_before_filters")

    @*filtering*@
	@if (Model.Products.Count > 0 && Model.DisplayFilter)
    {
		<div id="product-filter" class="block block-bordered product-filter-block">
			<form class="filter-product-form" method="GET" action="@Url.Action("Products", "Filter")" data-multiselecturl="@Url.Action("ProductsMultiSelect", "Filter")">
				<input type="hidden" name="categoryID" value="@Model.Id" />
				<input type="hidden" name="path" value="@Request.Url.AbsolutePath" />
				<input type="hidden" name="pagesize" value="@Model.PagingFilteringContext.PageSize" />
				<input type="hidden" name="orderby" value="@Model.PagingFilteringContext.OrderBy" />
				<input type="hidden" name="viewmode" value="@Model.PagingFilteringContext.ViewMode" />
				<input type="hidden" name="filter" value="@Request.QueryString.Get("filter")" />
				<input type="hidden" name="filterMultiSelect" value="" />
			</form>
			<div class="block-title">
				@T("Filtering.FilterResults")
			</div>
			<div class="block-body listbox"></div>

            <div id="product-filter-modal" class="modal hide fade" tabindex="-1">
				<div class="modal-header">
					<button type="button" class="close" data-dismiss="modal"><b>x</b></button>
					<h4 class="caption">Filter</h4>
				</div>
                <div class="modal-body"></div>
                <div class="modal-footer">
					<a href="javascript:void(0)" class="remove-checkmarks" rel="nofollow">@T("Products.Filter.RemoveCheckmarks")</a>
					<button class="btn btn-primary" data-dismiss="modal">@T("Common.OK")</button>
					<button class="btn" data-dismiss="modal">@T("Common.Cancel")</button>
                </div>
            </div>
		</div>
		<script type="text/javascript">
			$(function () {
				productFilter.init('#product-filter', '#product-filter-modal');
			});
		</script>
	}
}
