@model ProductOverviewModel
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Core.Domain.Orders;
@{
	// Perf: we use RouteValueDictionary instead of anonymous objects in this view because it's slightly faster
	// prepare "Add to cart" AJAX link
    string addtocartlink = "";
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
		addtocartlink = Url.Action("AddProductSimple", "ShoppingCart", new RouteValueDictionary { { "productId", Model.Id }, { "forceredirection", Model.ProductPrice.ForceRedirectionAfterAddingToCart } });
    }
    else
	{
		addtocartlink = Url.Action("AddProductSimple", "ShoppingCart", new RouteValueDictionary { { "productId", Model.Id } });
    }

    string leftContentWidth = (Model.ThumbDimension + 20).ToString() + "px";
    
    int ratingPercent = 0;
    if (Model.TotalReviews != 0)
    {
        ratingPercent = ((Model.RatingSum * 100) / Model.TotalReviews) / 5;
    }

    string reviewTitel = "";
    if (Model.TotalReviews > 0)
    {
        reviewTitel = Model.TotalReviews + (Model.TotalReviews == 1 ? T("Reviews.Overview.Review") : T("Reviews.Overview.Reviews"));
    }

    bool showQuicklinks = !Model.ProductPrice.DisableWishListButton || Model.CompareEnabled;  
}

<div class="pull-left" style="width:@leftContentWidth">
    <figure class="picture">
        <a href="@Url.RouteUrl("Product", new RouteValueDictionary { { "SeName", Model.SeName } })" title="@Model.DefaultPictureModel.Title">
            <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl" title="@Model.DefaultPictureModel.Title" />
        </a>
        @if (Model.ColorAttributes.Any())
        {
            <div class="colors">
                @foreach (var clr in Model.ColorAttributes)
                {
                    <span style="background-color: @clr.Color" title="@clr.FriendlyName"></span>
                }
            </div>
        }
    </figure>
    @if (Model.ShowReviews) {
    <div class="reviews" style="width:@leftContentWidth">
        <div class="rating" title="@reviewTitel">
            <div style="width: @(ratingPercent)%"></div>
        </div>
    </div>
    }
</div>
<div style="margin-left:@leftContentWidth">
    <div class="data">  
        <h3 class="name">
            <a href="@Url.RouteUrl("Product", new RouteValueDictionary { { "SeName", Model.SeName } })" title="@Model.Name">
                @if (Model.IsNew)
                {
                    <span class="label label-isnew">@T("Common.New")</span>
                } 
                <span>@Model.Name</span>
            </a>
        </h3>
        @if (Model.ShortDescription.HasValue()) 
        {
        <p class="description" title="@Model.ShortDescription">
            @Html.Raw(Model.ShortDescription)
        </p>
        }

        <div class="clearfix">
            <div class="pull-left attribute-block">

                <table class="attributes" style="width:100%">

                    @if (Model.ShowDeliveryTimes)
                    {
                        if ((!String.IsNullOrEmpty(Model.DeliveryTimeName) && !String.IsNullOrEmpty(Model.DeliveryTimeHexValue)) && Model.IsShipEnabled)
                        {
                            <tr class="delivery-time@(Model.InvisibleDeliveryTime ? " hide" : "")">
                                <td class="attr-label">
                                    <span><strong>@T("Products.DeliveryTime")</strong></span>
                                </td>

                                @if(Model.DisplayDeliveryTimeAccordingToStock)
                                {
                                    <td>
                                        <span class="delivery-time-color" style="background-color:@Model.DeliveryTimeHexValue" title="@Model.DeliveryTimeName"></span>
                                    </td>
                                }
                                else {
                                    <td>
                                        <span class="delivery-time-color" style="background-color:#9d261d" title="@Model.StockAvailablity"></span>
                                    </td>
                                }
                            </tr>
                        }
                    }

                    @if (Model.ShowSku && !String.IsNullOrWhiteSpace(Model.Sku)) 
                    {
                    <tr valign="top">
                        <td class="attr-label"><strong>@T("Products.Sku"):</strong></td>
                        <td>@Model.Sku</td>
                    </tr>
                    }

                    @if (Model.Manufacturers.Count > 0)
                    {
                    <tr valign="top">
                        <td class="attr-label"><strong>@(Model.Manufacturers.Count == 1 ? T("Products.Manufacturer") : T("Products.Manufacturers")):</strong></td>
                        <td>
                            @for (int i = 0; i < Model.Manufacturers.Count; i++)
                            {
                                var item = Model.Manufacturers[i];
                                <a href="@Url.RouteUrl("Manufacturer", new RouteValueDictionary { { "SeName", item.SeName } })">@item.Name</a>
                                if (i != Model.Manufacturers.Count - 1)
                                {
                                <text>,</text>
                                }
                            }
                        </td>
                    </tr>
                    }

                    @if (Model.ShowWeight && Model.Weight.HasValue())
                    {
                    <tr valign="top">
                        <td class="attr-label"><strong>@T("Products.Weight"):</strong></td>
                        <td>@Model.Weight</td>
                    </tr>
                    }

                    @if (Model.ShowDimensions)
                    {
                    <tr valign="top">
                        <td class="attr-label"><strong>@T("Products.Dimensions") (@Model.DimensionMeasureUnit):</strong></td>
                        <td>@Model.Dimensions</td>
                    </tr>
                    }

                </table>
                        
                @if (Model.Manufacturers.Any(x => x.PictureModel != null))
                {
                    <div class="manufacturer-pics">

                    @foreach (var manufacturer in Model.Manufacturers.Where(x => x.PictureModel != null))
                    {
                        <div class="manufacturer-item">
                            <div class="picture">
                                <a href="@Url.RouteUrl("Manufacturer", new RouteValueDictionary { { "SeName", manufacturer.SeName } })" title="@manufacturer.PictureModel.Title">
                                    <img alt="@manufacturer.PictureModel.AlternateText" src="@manufacturer.PictureModel.ImageUrl" title="@manufacturer.PictureModel.Title" /></a>
                            </div>
                        </div>
                    }

                    </div>
                }
            </div>
            <div class="pull-right price-block">
                <div class="prices">
                    @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <p class="old-product-price">
                            <span class="prefix">@T("Products.Price.OldPrice"):</span>
                            <span class="price">@Model.ProductPrice.OldPrice</span>
                        </p>
                    }
                    <p class="product-price">
                        @if (Model.ProductPrice.ShowDiscountSign && Model.ProductPrice.HasDiscount)
                        {
                            <span class="label label-important label-discount-sign">%</span>
                        }
                        <span class="price text-success">@Model.ProductPrice.Price</span>
                    </p>
                </div>
                @if (Model.TransportSurcharge.HasValue())
                {
                <div class="transport-charge muted">
                    @Model.TransportSurcharge
                </div>
                }
                
                @if (Model.DisplayBasePrice && !String.IsNullOrEmpty(Model.BasePriceInfo))
                {
                <div class="base-price muted">
                    @Model.BasePriceInfo
                </div>
                }

                @if (Model.ShowLegalInfo)
                {
                <div class="legal-info muted">
                    @Html.Raw(Model.LegalInfo)
                </div>
                }
            </div>
        </div>
        
        <div class="clearfix">
            
            @if (showQuicklinks)
            {
                <div class="pull-left quicklinks">
                    @if (!Model.ProductPrice.DisableWishListButton)
                    {
                        <a class="ajax-cart-link" 
                            data-href='@Url.Action("AddProduct", "ShoppingCart", new RouteValueDictionary { { "productId", Model.Id }, { "shoppingCartTypeId", (int)ShoppingCartType.Wishlist } })'
                            href="#"
						    rel="nofollow"
                            data-form-selector="#product-details-form"
                            data-type="wishlist"
                            data-action="add">
                            <i class="fa fa-gift"></i>
                            @T("Categories.Wishlist")
                        </a>
                    }
                    @if (Model.CompareEnabled)
                    {
                        <a class="ajax-cart-link"
                            data-href="@Url.Action("AddProductToCompare", new RouteValueDictionary { { "id", Model.Id } })"
                            href="#"
						    rel="nofollow"
                            data-type="compare"
                            data-action="add">
                            <i class="fa fa-retweet"></i>
                            @T("Categories.Compare")
                        </a>
                    }
               </div>
           }

           <div class="buttons pull-right">     
                <a href='@Url.RouteUrl("Product", new RouteValueDictionary { { "SeName", Model.SeName } })' class="btn" title="@T("Products.Details")" rel="tooltip">
                    <i class="fa fa-info-circle"></i>
                </a>
                 
                @if (!Model.ProductPrice.DisableBuyButton && !Model.HideBuyButtonInLists)
                {
                    if (!Model.ProductPrice.CallForPrice) { 
                        <a data-href='@addtocartlink'
                            href="#"
					        rel="nofollow"
                            class="btn btn-warning ajax-cart-link"
                            data-type="cart"
                            data-action="add">
                            @(Model.ProductPrice.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))
                            <i class="fa fa-shopping-cart"></i>      
                        </a>
					}
					else
					{
						<a class="btn btn-primary add-to-cart-button" rel="nofollow" href="@Url.Action("AskQuestion", "Product", new RouteValueDictionary { { "id", Model.Id } })">
							<i class="fa fa-envelope"></i>
							@T("Products.CallForPrice.GoToForm")
						</a>
					}
				}
            </div>
        </div>

    </div>
</div>

<div>
    @Html.Widget("productbox_add_info")
</div>
