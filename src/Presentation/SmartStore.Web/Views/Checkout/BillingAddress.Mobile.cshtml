@model CheckoutBillingAddressModel
@using SmartStore.Core.Domain.Orders;
@using SmartStore.Web.Models.Checkout;
@using SmartStore.Web.Models.Common;
@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page">
    <div class="page-title">
        <h1>@T("Checkout.BillingAddress")</h1>
    </div>
    <div class="page-body checkout-data">
        @Html.Widget("mobile_checkout_billing_address_top")
        @if (Model.ExistingAddresses.Count > 0)
        {
            <div>
                <div class="select-address-title">
                    @T("Checkout.SelectBillingAddress")
                </div>
                <div class="address-grid">
                    <ul data-role="listview" data-inset="true" data-filter="false">
                        @foreach (var item in Model.ExistingAddresses)
                        {
                            <li>
                                <div class="item-box">
                                    <div class="address-item">
                                        <div class="select-button">
											<a href="@Url.Action("SelectBillingAddress", new { addressId = item.Id })" data-role="button" data-ajax="false" rel="nofollow">@T("Checkout.BillToThisAddress")</a>
                                        </div>
                                        <div class="address-box">
                                            <div class="name">
                                                <strong>@item.FirstName @item.LastName</strong>
                                            </div>
                                            <div class="email">@T("Address.Fields.Email"): @item.Email</div>
                                            @if (item.PhoneEnabled)
                                            {
                                                <div class="phone">
                                                    @T("Address.Fields.PhoneNumber"):
                                         @item.PhoneNumber
                                                </div>
                                            }
                                            @if (item.FaxEnabled)
                                            {
                                                <div class="fax">
                                                    @T("Address.Fields.FaxNumber"):
                                         @item.FaxNumber
                                                </div>
                                            }
                                            @if (item.CompanyEnabled && !String.IsNullOrEmpty(item.Company))
                                            {
                                                <div class="company">
                                                    @item.Company
                                                </div>
                                            }
                                            @if (item.StreetAddressEnabled)
                                            {
                                                <div class="address1">
                                                    @item.Address1
                                                </div>
                                            }
                                            @if (item.StreetAddress2Enabled && !String.IsNullOrEmpty(item.Address2))
                                            {
                                                <div class="address2">
                                                    @item.Address2
                                                </div>
                                            }
                                            @if (item.CityEnabled || item.StateProvinceEnabled || item.ZipPostalCodeEnabled)
                                            {
                                                <div class="city-state-zip">
                                                    @if (item.CityEnabled)
                                                    {
                                                        @item.City
                                                    }
                                                    @if (item.CityEnabled && (item.StateProvinceEnabled || item.ZipPostalCodeEnabled))
                                                    {
                                                        <text>,</text>
                                                    }
                                                    @if (item.StateProvinceEnabled)
                                                    {
                                                        @item.StateProvinceName
                                                    }
                                                    @if (item.ZipPostalCodeEnabled)
                                                    {
                                                        @item.ZipPostalCode
                                                    }
                                                </div>
                                            }
                                            @if (item.CountryEnabled && !String.IsNullOrEmpty(item.CountryName))
                                            {
                                                <div class="country">
                                                    @item.CountryName
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        }
        @Html.Widget("mobile_checkout_billing_address_middle")
        <div class="enter-address-title">
            @if (Model.ExistingAddresses.Count > 0)
            {
                @T("Checkout.OrEnterNewAddress")
            }
            else
            {
                @T("Checkout.EnterBillingAddress")
            }
        </div>
        <div class="enter-address">
            @*set "data-ajax" attribute to "false"*@
            @using (Html.BeginForm(null, null, FormMethod.Post, new RouteValueDictionary { { "data-ajax", "false" } }))
            {
                <div class="enter-address-body">
                    @{
                        var dataDictAddress = new ViewDataDictionary();
                        //Merge ModelState (required for validation)
                        dataDictAddress.ModelState.Merge(ViewData.ModelState);
                        dataDictAddress.TemplateInfo.HtmlFieldPrefix = "NewAddress";
                        @Html.Partial("_CreateOrUpdateAddress", Model.NewAddress, dataDictAddress)              
                    }
                </div>
                <div class="buttons">
					<input type="submit" name="nextstep" id="nextstep" value="@T("Checkout.NextButton")" />
                </div>
            }
        </div>
        @Html.Widget("mobile_checkout_billing_address_bottom")
    </div>
</div>
