@model CheckoutProgressModel

@using SmartStore.Web.Models.Checkout;
@using System.Dynamic;

@{
    var progresses = new List<dynamic> {
        // Cart
        new { 
            Step = CheckoutProgressStep.Cart,
            ClassName = "step-cart",
            Label =  T("Checkout.Progress.Cart").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Cart,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Cart,
            Href = Url.RouteUrl("ShoppingCart")
        },
        // Address
        new { 
            Step = CheckoutProgressStep.Address,
            ClassName = "step-address",
            Label =  T("Checkout.Progress.Address").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Address,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Address,
            Href = Url.Action("BillingAddress")
        },
        // Shipping
        new { 
            Step = CheckoutProgressStep.Shipping,
            ClassName = "step-shipping",
            Label =  T("Checkout.Progress.Shipping").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Shipping,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Shipping,
            Href = Url.Action("ShippingMethod")
        },
        // Payment
        new { 
            Step = CheckoutProgressStep.Payment,
            ClassName = "step-payment",
            Label =  T("Checkout.Progress.Payment").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Payment,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Payment,
            Href = Url.Action("PaymentMethod")
        },
        // Confirm
        new { 
            Step = CheckoutProgressStep.Confirm,
            ClassName = "step-confirm",
            Label =  T("Checkout.Progress.Confirm").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Confirm,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Confirm,
            Href = Url.Action("Confirm")
        },
        // Complete
        new { 
            Step = CheckoutProgressStep.Complete,
            ClassName = "step-complete",
            Label =  T("Checkout.Progress.Complete").Text,
            Visited = Model.CheckoutProgressStep > CheckoutProgressStep.Complete,
            Active = Model.CheckoutProgressStep == CheckoutProgressStep.Complete,
            Href = "javascript:void(0)"
        }
    };
}

<nav class="order-progress">
    <ul class="unstyled clearfix">
    @foreach (var p in progresses)
    {
        string liClass = null;
        string href = p.Visited || p.Active ? p.Href : "javascript:void(0)";
        if (p.Visited)
        {
            liClass = "visited";
        }
        else if (p.Active)
        {
            liClass = "active";
        }
        else
        {
            liClass = "inactive";
        }
        <li class="@liClass">
            <a class="order-progress-step @p.ClassName" href="@href">
                <span class="order-progress-label">@p.Label</span>
            </a>
        </li>
    }
    </ul>
</nav>

<nav class="order-progress hide">
    <ul>
        @Html.Widget("checkout_progress_before")
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Cart ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\"")) @(Model.CheckoutProgressStep != CheckoutProgressStep.Complete ? @Html.Raw(string.Format(" href=\"{0}\"", Url.RouteUrl("ShoppingCart"))) : null)>
                <span class="order-progress-label">@T("Checkout.Progress.Cart")</span>
            </a>
        </li>
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Address ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\"")) @(Model.CheckoutProgressStep != CheckoutProgressStep.Cart && Model.CheckoutProgressStep != CheckoutProgressStep.Complete ? @Html.Raw(string.Format(" href=\"{0}\"", Url.Action("BillingAddress"))) : null)>
                <span class="order-progress-label">@T("Checkout.Progress.Address")</span>
            </a>
        </li>

        @if(Model.DisplayShippingOptions)
        { 
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Shipping ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\"")) @(Model.CheckoutProgressStep != CheckoutProgressStep.Cart && Model.CheckoutProgressStep != CheckoutProgressStep.Address && Model.CheckoutProgressStep != CheckoutProgressStep.Complete ? @Html.Raw(string.Format(" href=\"{0}\"", Url.Action("ShippingMethod"))) : null)>
                <span class="order-progress-label">@T("Checkout.Progress.Shipping")</span>
            </a>
        </li>
        }
        
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Payment ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\"")) @(Model.CheckoutProgressStep != CheckoutProgressStep.Cart && Model.CheckoutProgressStep != CheckoutProgressStep.Address && Model.CheckoutProgressStep != CheckoutProgressStep.Shipping && Model.CheckoutProgressStep != CheckoutProgressStep.Complete ? @Html.Raw(string.Format(" href=\"{0}\"", Url.Action("PaymentMethod"))) : null)>
                <span class="order-progress-label">@T("Checkout.Progress.Payment")</span>
            </a>
        </li>
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Confirm ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\"")) @(Model.CheckoutProgressStep != CheckoutProgressStep.Cart && Model.CheckoutProgressStep != CheckoutProgressStep.Address && Model.CheckoutProgressStep != CheckoutProgressStep.Shipping && Model.CheckoutProgressStep != CheckoutProgressStep.Payment && Model.CheckoutProgressStep != CheckoutProgressStep.Complete ? @Html.Raw(string.Format(" href=\"{0}\"", Url.Action("Confirm"))) : null)>
                <span class="order-progress-label">@T("Checkout.Progress.Confirm")</span>
            </a>
        </li>
        <li>
            <a @(Model.CheckoutProgressStep == CheckoutProgressStep.Complete ? @Html.Raw(" class=\"active-step\"") : @Html.Raw(" class=\"inactive-step\""))>
                <span class="order-progress-label">@T("Checkout.Progress.Complete")</span>
            </a>
        </li>
        @Html.Widget("checkout_progress_after")
    </ul>
</nav>
