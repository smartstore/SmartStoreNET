@model HeaderLinksModel
@using SmartStore.Web.Models.Common;
<div class="header-links">
    <ul>
        @Html.Widget("header_links_before")
        @if (Model.IsCustomerImpersonated)
        {
            <li><span class="impersonate">(@(string.Format(T("Account.ImpersonatedAs").Text, Model.CustomerEmailUsername)))
                - <a href="@Url.RouteUrl("Logout")" class="finish-impersonation" title="@T("Account.ImpersonatedAs.Finish.Hint")" rel="nofollow">@T("Account.ImpersonatedAs.Finish")</a>
                ) </span></li>
        }
        @if (Model.DisplayAdminLink)
        {
            <li><a href="@Url.Content("~/admin")" class="ico-admin" rel="nofollow">@T("Account.Administration")</a>
            </li>
        }
        @if (Model.IsAuthenticated)
        {
            <li><a href="@Url.Action("Info", "Customer")" class="account" rel="nofollow">@Model.CustomerEmailUsername</a></li>
            <li><a href="@Url.RouteUrl("Logout")" class="ico-logout" rel="nofollow">@T("Account.Logout")</a></li>
            
            if (Model.AllowPrivateMessages)
            {
				<li><a href="@Url.RouteUrl("PrivateMessages", new { tab = "inbox" })" class="ico-inbox" rel="nofollow">@T("PrivateMessages.Inbox")</a>
					@Model.UnreadPrivateMessages
				</li>
            }
        }
        else
        {
            <li><a href="@Url.RouteUrl("Register")" class="ico-register">@T("Account.Register")</a></li>
            <li><a href="@Url.RouteUrl("Login")" class="ico-login">@T("Account.Login")</a></li>
        }
        @if (Model.ShoppingCartEnabled)
        {
            <li id="topcartlink"><a href="@Url.RouteUrl("ShoppingCart")" class="ico-cart">@T("ShoppingCart")</a>
                <a href="@Url.RouteUrl("ShoppingCart")" class="cart-qty">(@Model.ShoppingCartItems)</a>
            </li>
        }
        @if (Model.WishlistEnabled)
        {
            <li><a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">@T("Wishlist")</a> <a href="@Url.RouteUrl("Wishlist")" class="wishlist-qty">
                (@Model.WishlistItems)</a> </li>
        }
        @Html.Widget("header_links_after")
    </ul>

	@if (Model.AllowPrivateMessages && !string.IsNullOrEmpty(Model.AlertMessage))
	{
		<script>
			$(document).ready(function () {
				displayNotification('@(Model.AlertMessage)', 'success');
			});
		</script>
	}

    @if (Model.ShoppingCartEnabled)
    {
        <script>
			$(document).on('mouseenter', '#topcartlink', function () {
                $('#flyout-cart').addClass('active');
            });
			$(document).on('mouseleave', '#topcartlink', function () {
                $('#flyout-cart').removeClass('active');
            });
			$(document).on('mouseenter', '#flyout-cart', function () {
                $('#flyout-cart').addClass('active');
            });
			$(document).on('mouseleave', '#flyout-cart', function () {
                $('#flyout-cart').removeClass('active');
            });
        </script>
    }
</div>
