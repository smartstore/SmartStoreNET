@model FooterModel
@using SmartStore.Web.Models.Common;

@{ 
	var footerLinks = new List<Tuple<string, string>>
	{
		// Item1 = TopicUrl, Item2 = Locale Resource Key
		new Tuple<string, string>(Url.TopicUrl("aboutus"), "AboutUs"),
		new Tuple<string, string>(Url.TopicUrl("imprint"), "Imprint"),
		new Tuple<string, string>(Url.TopicUrl("disclaimer"), "Disclaimer"),
		new Tuple<string, string>(Url.TopicUrl("privacyinfo"), "PrivacyNotice"),
		new Tuple<string, string>(Url.TopicUrl("conditionsofuse"), "ConditionsOfUse")
	};

	var socialLinks = new List<Tuple<string, string>>();
	if (Model.FacebookLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.FacebookLink, "facebook"));
	}

	if (Model.GooglePlusLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.GooglePlusLink, "google-plus"));
	}

	if (Model.TwitterLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.TwitterLink, "twitter"));
	}

	if (Model.PinterestLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.PinterestLink, "pinterest"));
	}

	if (Model.YoutubeLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.YoutubeLink, "youtube"));
	}

	if (Model.InstagramLink.HasValue())
	{
		socialLinks.Add(new Tuple<string, string>(Model.InstagramLink, "instagram"));
	}

	var invserseFooter = GetThemeVariable<bool>("inverse-footer");
}

@{ Html.RenderWidget("footer_top"); }

@if (Model.ShowSocialLinks && socialLinks.Any())
{
	<div class="footer-social-wrapper">
		<div class="container footer-social">
			<div class="row">
				<div class="col text-center">
					@foreach (var link in socialLinks)
					{
						<a href="@link.Item1" target="_blank" class="btn x-btn-@(invserseFooter ? "clear" : "secondary") btn-circle btn-social btn-brand-@link.Item2">
							<i class="fa fa-@link.Item2"></i>
						</a>
					}
				</div>
			</div>
		</div>
	</div>
}

<div class="footer-main-wrapper">
	<div class="container footer-main">
		<div class="row sm-gutters">

			<div class="col-md-3">
				<nav class="footer-links nav-collapsible">
					<h4 class="footer-title nav-toggler collapsed" data-toggle="collapse" data-target="#footer-info" aria-controls="footer-info" aria-expanded="false">@T("Footer.Info")</h4>
					<div class="collapse nav-collapse" id="footer-info">
						<ul class="list-unstyled">

                            @{ Html.RenderWidget("footer_col_1_before"); }

							@if (Model.ManufacturerEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("ManufacturerList")">@T("Manufacturers.List")</a></li>
							}
							@if (Model.RecentlyAddedProductsEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("RecentlyAddedProducts")">@T("Products.NewProducts")</a></li>
							}
							@if (Model.RecentlyViewedProductsEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("RecentlyViewedProducts")">@T("Products.RecentlyViewedProducts")</a></li>
							}
							@if (Model.CompareProductsEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("CompareProducts")">@T("Products.Compare.List")</a></li>
							}

                            @{ Html.RenderWidget("footer_col_1_after"); }

						</ul>
					</div>
				</nav>
			</div>

			<div class="col-md-3">
				<nav class="footer-links nav-collapsible">
					<h4 class="footer-title nav-toggler collapsed" data-toggle="collapse" data-target="#footer-service" aria-controls="footer-service" aria-expanded="false">
                        <span class="d-none d-md-block">@T("Footer.Service")</span>
                        <span class="d-md-none">@T("Footer.Service.Mobile")</span>
                    </h4>
					<div class="collapse nav-collapse" id="footer-service">
						<ul class="list-unstyled">

                            @{ 
								Html.RenderWidget("footer_col_2_before");

								var contactUsUrl = Url.TopicUrl("contactus");
								var shippingInfoUrl = Url.TopicUrl("shippinginfo");
								var paymentInfoUrl = Url.TopicUrl("paymentinfo");
							}

							@if (contactUsUrl.HasValue())
							{
								<li><a class="footer-link" href="@contactUsUrl">@T("ContactUs")</a></li>
							}
							@if (Model.BlogEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("Blog")">@T("Blog")</a></li>
							}
							@if (Model.ForumEnabled)
							{
								<li><a class="footer-link" href="@Url.RouteUrl("Boards")">@T("Forum.Forums")</a></li>
							}
							@if (shippingInfoUrl.HasValue())
							{
								<li><a class="footer-link" href="@shippingInfoUrl">@T("ShippingReturns")</a></li>
							}
							@if (paymentInfoUrl.HasValue())
							{
								<li><a class="footer-link" href="@paymentInfoUrl">@T("Paymentinfo")</a></li>
							}

                            @{ Html.RenderWidget("footer_col_2_after"); }

						</ul>
					</div>
				</nav>
			</div>

			<div class="col-md-3">
				<nav class="footer-links company nav-collapsible">
					<h4 class="footer-title nav-toggler collapsed" data-toggle="collapse" data-target="#footer-company" aria-controls="footer-company" aria-expanded="false">
                        <span class="d-none d-md-block">@T("Footer.Company")</span>
                        <span class="d-md-none">@T("Footer.Company.Mobile")</span>
                    </h4>
					<div class="collapse nav-collapse" id="footer-company">
						<ul class="list-unstyled">

                            @{ Html.RenderWidget("footer_col_3_before"); }

							@foreach (var link in footerLinks)
							{
								if (link.Item1.HasValue())
								{
									<li><a class="footer-link" href="@link.Item1">@T(link.Item2)</a></li>
								}
							}

                            @if (Model.DisplayLoginLink)
                            {
                                <li><a class="footer-link" href="@Url.RouteUrl("Login", new { ReturnUrl = Request.RawUrl })">@T("Account.Login")</a></li>
                            }

                            @{ Html.RenderWidget("footer_col_3_after"); }

						</ul>
					</div>
				</nav>
			</div>

			<div class="col-md-3">
				@if (!Model.HideNewsletterBlock)
				{
					<div class="footer-newsletter nav-collapsible" data-subscription-url="@(Url.RouteUrl("SubscribeNewsletter"))">
						<h4 class="footer-title nav-toggler collapsed" data-toggle="collapse" data-target="#footer-newsletter" aria-controls="footer-newsletter" aria-expanded="false">@T("Newsletter.Title")</h4>
						<div class="collapse nav-collapse" id="footer-newsletter">
							<div id="newsletter-subscribe-block">
								<div class="input-group has-icon mb-2">
									@Html.TextBoxFor(x => x.NewsletterEmail, new { id = "newsletter-email", @class = "form-control", placeholder = T("Newsletter.Email") })
									<span class="input-group-icon text-muted">
										<i class="fa fa-envelope"></i>
									</span>
									<div class="input-group-append">
										<button id="newsletter-subscribe-button" class="btn btn-primary btn-icon" title="@T("Newsletter.Button")">
											<i class="fa fa-angle-right"></i>
										</button>
									</div>
								</div>

								<div class="d-none d-lg-block">
									<div class="form-inline">
										<div class="form-check form-check-inline">
											<input class="form-check-input" type="radio" id="newsletter-subscribe" value="newsletter-subscribe" name="optionsRadios" checked="checked">
											<label class="form-check-label" for="newsletter-subscribe">
												<span>@T("Newsletter.Subscribe")</span>
											</label>
										</div>

										<div class="form-check form-check-inline">
											<input class="form-check-input" type="radio" id="newsletter-unsubscribe" value="newsletter-unsubscribe" name="optionsRadios">
											<label class="form-check-label" for="newsletter-unsubscribe">
												<span>@T("Newsletter.Unsubscribe")</span>
											</label>
										</div>
									</div>
								</div>

								@Html.ValidationMessageFor(x => x.NewsletterEmail)

							</div>
							<div id="newsletter-result-block" class="alert alert-success d-none"></div>
						</div>
					</div>
				}

				@if (Model.ShowThemeSelector)
				{
					<div class="theme-selector d-none d-md-block">
						<h4>@T("Footer.Themes")</h4>
						<div class="content">
							@{
								Html.RenderAction("StoreThemeSelector", "Common");
							}
						</div>
					</div>
				}
			</div>
		</div>
	</div>
</div>

@{ Html.RenderWidget("footer_bottom"); }

<div class="footer-bottom-wrapper">
	<div class="container footer-bottom">
		<div class="row sm-gutters">
			
			@if (Model.ShowLegalInfo)
			{
				<div class="col pb-1 pb-sm-0">
					@Html.Raw(Model.LegalInfo)
				</div>
			}

			@if (Model.SmartStoreHint.HasValue())
			{
				<div class="col-12 col-sm-auto pb-1 pb-sm-0 text-sm-center">
					@Html.Raw(Model.SmartStoreHint)
				</div>
			}

			<div class="col text-sm-right">
				@T("Content.CopyrightNotice", DateTime.Now.Year.ToString(), Model.StoreName)
			</div>
		</div>
	</div>
</div>