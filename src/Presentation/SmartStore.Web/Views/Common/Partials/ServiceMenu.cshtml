@model ServiceMenuModel
@using SmartStore.Web.Models.Common;

@{
	Html.RenderWidget("servicemenu_before");

	var links = new List<Tuple<string, string>>
	{
		// Item1 = TopicUrl, Item2 = Locale Resource Key
		new Tuple<string, string>(Url.TopicUrl("aboutus"), "AboutUs"),
		new Tuple<string, string>(Url.TopicUrl("disclaimer"), "Disclaimer"),
		new Tuple<string, string>(Url.TopicUrl("shippinginfo"), "ShippingReturns"),
		new Tuple<string, string>(Url.TopicUrl("conditionsofuse"), "ConditionsOfUse")
	};
}

@if (Model.RecentlyAddedProductsEnabled)
{
	<a href="@Url.RouteUrl("RecentlyAddedProducts")" class="dropdown-item">@T("Products.NewProducts")</a>
}
@if (Model.ManufacturerEnabled)
{
	<a href="@Url.RouteUrl("ManufacturerList")" class="dropdown-item">@T("Manufacturers.List")</a>
}
@if (Model.RecentlyViewedProductsEnabled)
{
	<a href="@Url.RouteUrl("RecentlyViewedProducts")" class="dropdown-item">@T("Products.RecentlyViewedProducts")</a>
}
@if (Model.CompareProductsEnabled)
{
	<a href="@Url.RouteUrl("CompareProducts")" class="dropdown-item">@T("Products.Compare.List")</a>
}

<div class="dropdown-divider"></div>

@foreach (var link in links)
{
	if (link.Item1.HasValue())
	{
		<a href="@link.Item1" class="dropdown-item">@T(link.Item2)</a>
	}
}

@{ Html.RenderWidget("servicemenu_after"); }
