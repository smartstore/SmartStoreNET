@model CustomerOrderListModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.Account").Text);
}
@using SmartStore.Web.Models.Customer;
@section left
{
    @{ Html.RenderPartial("MyAccountNavigation", Model.NavigationModel, new ViewDataDictionary()); }
}
<div class="page account-page order-list-page container">
    
    <div class="page-title">
        <h1>@T("Account.CustomerOrders")</h1>
    </div>
    
    <div class="page-body">
        @if (Model.RecurringOrders.Count > 0)
        {

            using (Html.BeginForm())
            {
                <div class="recurring-payments">
                    <div class="section-title">
                        @T("Account.CustomerOrders.RecurringOrders")
                    </div>

                    <div><hr /></div>

                    <div class="recurring-payments-box">
                        <table class="table table-striped table-hover">
                            <thead>
                                <tr>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.StartDate")
                                    </th>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.CycleInfo")
                                    </th>
                                    <th >
                                        @T("Account.CustomerOrders.RecurringOrders.NextPayment")
                                    </th>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.TotalCycles")
                                    </th>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.CyclesRemaining")
                                    </th>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.InitialOrder")
                                    </th>
                                    <th>
                                        @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RecurringOrders)
                                {
                                    <tr>
                                        <td>
                                            @item.StartDate
                                        </td>
                                        <td>
                                            @item.CycleInfo
                                        </td>
                                        <td>
                                            @item.NextPayment
                                        </td>
                                        <td>
                                            @item.TotalCycles
                                        </td>
                                        <td>
                                            @item.CyclesRemaining
                                        </td>
                                        <td>
										    <a class="btn" href="@Url.Action("Details", "Order", new { id = item.InitialOrderId })" rel="nofollow">
											    <i class="fa fa-list-alt"></i>
											    @string.Format(@T("Account.CustomerOrders.RecurringOrders.ViewInitialOrder").Text, item.InitialOrderId)
										    </a>
                                        </td>
                                        <td>
                                            @if (item.CanCancel)
                                            {
                                                <button type="submit" name="cancelRecurringPayment@(item.Id)" class="btn btn-danger">
												    <i class="fa fa-trash-o"></i>
                                                    @T("Account.CustomerOrders.RecurringOrders.Cancel")
                                                </button>
                                            }
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }

            if (Model.CancelRecurringPaymentErrors.Count > 0)
            {
                <div class="alert alert-danger">
                    @for (int i = 0; i < Model.CancelRecurringPaymentErrors.Count; i++)
                    {
                        <p>@Model.CancelRecurringPaymentErrors[i]</p>
                    }
                </div>
            }
        }
        <div class="order-list">
            @if (Model.Orders.Count > 0)
            {
                foreach (var order in Model.Orders)
                {
                    <div class="order-item m-t-2">
                        <h4 class="title">@T("Account.CustomerOrders.OrderNumber"): @order.OrderNumber</h4>
                        <div><hr /></div>

                        <div class="row">
                            
                            <div class="col-sm-9">
                                <dl class="dl-horizontal row">
                                    <dt class="col-sm-4">@T("Account.CustomerOrders.OrderStatus"):</dt>
                                    <dd class="col-sm-8">@order.OrderStatus</dd>
                                    <dt class="col-sm-4">@T("Account.CustomerOrders.OrderDate"):</dt>
                                    <dd class="col-sm-8">@order.CreatedOn.ToString()</dd>
                                    <dt class="col-sm-4">@T("Account.CustomerOrders.OrderTotal"):</dt>
                                    <dd class="col-sm-8">@order.OrderTotal</dd>
                                </dl>                                
                            </div>

                            <div class="buttons col-sm-3">
                                @if (order.IsReturnRequestAllowed)
                                {
                                    <a class="btn btn-secondary" href="@Url.Action("ReturnRequest", "ReturnRequest", new { id = order.Id })" rel="nofollow">
                                        <i class="fa fa-reply"></i>
                                        @T("Account.CustomerOrders.ReturnItems")
                                    </a>
                                    <text>&nbsp;&nbsp;&nbsp;</text>
                                }
                                <a class="btn btn-secondary" href="@Url.Action("Details", "Order", new { id = order.Id })" rel="nofollow">
                                    <i class="fa fa-list-alt"></i>
                                    @T("Account.CustomerOrders.OrderDetails")
                                </a>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <span class="text-muted">
                    @T("Account.CustomerOrders.NoOrders")
                </span>
            }
        </div>
    </div>
</div>
