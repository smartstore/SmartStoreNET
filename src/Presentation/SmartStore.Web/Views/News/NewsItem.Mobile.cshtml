@model NewsItemModel
@using SmartStore.Web.Models.News;
@{
    Layout = "~/Views/Shared/_Root.cshtml";

    //title
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Title);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

}
<div class="page news-item-page">
    <div class="page-title">
        <h1>@Model.Title</h1>
    </div>
    <div class="page-body">
        <div class="news-date">
            @Model.CreatedOn.ToString("D")
        </div>
        @Html.Widget("mobile_newsitem_page_before_body")
        <div class="news-body">
            @Html.Raw(Model.Full)
        </div>
        @Html.Widget("mobile_newsitem_page_before_comments")
        @if (Model.AllowComments)
        {
            <div class="new-comment">
                @using (Html.BeginForm())
                {
                    <div class="title">
                        @T("News.Comments.LeaveYourComment")
                    </div>
                    <div>
                        @Html.LabelFor(model => model.AddNewComment.CommentTitle)
                        @Html.TextBoxFor(model => model.AddNewComment.CommentTitle, new { @class = "comment-title" })
                        @Html.ValidationMessageFor(model => model.AddNewComment.CommentTitle)
                    </div>
                    <div>
                        @Html.LabelFor(model => model.AddNewComment.CommentText)
                        @Html.TextAreaFor(model => model.AddNewComment.CommentText, new { @class = "comment-text" })
                        @Html.ValidationMessageFor(model => model.AddNewComment.CommentText)
                    </div>
                    <div class="message-error">
                        @Html.ValidationSummary(true)
                    </div>
                    if (Model.AddNewComment.DisplayCaptcha)
                    {
                    <div class="captcha-box">
                        @Html.Raw(Html.GenerateCaptcha())
                    </div>
                    }
                    <div class="buttons">
                        <input type="submit" name="add-comment" value="@T("News.Comments.SubmitButton")" />
                    </div>
                }
            </div>
            if (Model.Comments.Count > 0)
            {
            <div class="comment-list">
                <div class="title">
                    @T("News.Comments")
                </div>
                <ul data-role="listview" data-inset="true" data-filter="false">
                    @foreach (var comment in Model.Comments)
                    {
                        <li>
                            <div class="news-comment">
                                <div class="comment-info">
                                    <div class="user-info">
                                        @if (comment.AllowViewingProfiles)
										{
											<a href="@Url.RouteUrl("CustomerProfile", new { id = comment.CustomerId })" class="username" rel="nofollow">@(comment.CustomerName)</a>
										}
										else
										{
                                            <span class="username">@(comment.CustomerName)</span>
                                        }
                                    </div>
                                    <div class="comment-time">
                                        @T("News.Comments.CreatedOn"): <span class="stat-value">@comment.CreatedOn.ToString("g")</span>
                                    </div>
                                </div>
                                <div class="comment-content">
                                    <div class="comment-title">
                                        <span class="comment-text">@comment.CommentTitle</span>
                                    </div>
                                    <div class="comment-body">
                                        <span class="comment-text">@Html.Raw(SmartStore.Core.Html.HtmlUtils.FormatText(comment.CommentText, false, true, false, false, false, false))</span>
                                    </div>
                                </div>
                                @Html.Widget("mobile_newsitem_page_inside_comment")
                            </div>
                        </li>
                    }
                </ul>
            </div>
            }
        }
        @Html.Widget("mobile_newsitem_page_after_comments")
    </div>
</div>
