@model PollModel
@using SmartStore.Web.Models.Polls;
@{
    Html.AddScriptParts("~/Scripts/public.voting.js");
}
<div id="poll-block-@(Model.Id)" class="@(Model.SystemKeyword.Equals("RightColumnPoll") ? "" : "card") poll-item equalized-column" data-equalized-deep="true">
    <div class="@(Model.SystemKeyword.Equals("RightColumnPoll") ? "fs-h6 m-b-1" : "card-header")" data-equalized-part="name">
        @Model.Name
    </div>
    @if (Model.AlreadyVoted)
    {
        <div class="poll-results @(Model.SystemKeyword.Equals("RightColumnPoll") ? "" : "card-block")">
            @foreach (var item in Model.Answers)
            {
                <div class="answer">
                    <div class="vote-result-percent pull-right">@((item.PercentOfTotalVotes/100).ToString("#0.##%"))</div>
                    <div class="vote-result-line">@item.Name (@item.NumberOfVotes)</div>
                    <progress class="progress progress-info" value="@(Math.Round(item.PercentOfTotalVotes, 0))" max="100"></progress>
                </div>
            }
            <div class="poll-total-votes text-success">@string.Format(T("Polls.TotalVotes").Text, Model.TotalVotes)</div>
        </div>
    }
    else
    {
        <div class="poll-take-poll @(Model.SystemKeyword.Equals("RightColumnPoll") ? "" : "card-block")">
            <div data-equalized-part="data">
                @foreach (var item in Model.Answers)
                {
                    <div class="radio">
                        <label><input type="radio" id="pollanswers-@(item.Id)" name="pollanswers-@(Model.Id)" value="@item.Id" />@item.Name</label>
                    </div>
                }
            </div>
            <button id="vote-poll-@(Model.Id)" 
                data-id="@(Model.Id)" 
                data-target="@(Url.Action("Vote"))" 
                data-message="@T("Polls.SelectAnswer")" 
                class="btn btn-warning btn-block btn-votenow">
                @T("Polls.Vote")
            </button>

        </div>
    }
</div>
