@model ProductDetailsModel

@using System.Globalization;
@using SmartStore.Web.Models.Catalog;

@{
	if (Model.AddToCart.DisableBuyButton && Model.AddToCart.DisableWishlistButton)
	{
		return;
	}

	var isBundleItem = Model.IsBundlePart;
	var priceModel = Model.ProductPrice;

	var currentPrice = priceModel.PriceWithDiscount.NullEmpty() ?? priceModel.Price;
	var currentPriceValue = priceModel.PriceWithDiscountValue > 0 ? priceModel.PriceWithDiscountValue : priceModel.PriceValue;
	var currentPriceLabel = priceModel.NoteWithDiscount;

	var oldPrice1 = priceModel.OldPrice;
	var oldPrice1Label = T("Products.Price.OldPrice").Text;

	var oldPrice2 = priceModel.PriceWithDiscount.HasValue() ? priceModel.Price : "";
	var oldPrice2Label = priceModel.NoteWithoutDiscount;

	var basePriceEnabled = isBundleItem ? priceModel.BundleItemShowBasePrice : Model.IsBasePriceEnabled;

	if (oldPrice2.HasValue() && !oldPrice1.HasValue())
	{
		oldPrice1 = oldPrice2;
		oldPrice2 = null;
		oldPrice2Label = null;
	}

	var blocksHaveLabel = currentPriceLabel.HasValue() && oldPrice2Label.HasValue();
}

<div class="pd-offer-price">
	@if (priceModel.CallForPrice)
	{
		<h4 class="pd-price pd-callforprice">@T("Products.CallForPrice")</h4>
	}
	else
	{
		<!-- Current price -->
		<div class="pd-group clearfix">
			<div class="clearfix">
				<div class="pd-price-block">
					@if (!isBundleItem)
					{
						<meta itemprop="priceCurrency" content="@WorkContext.WorkingCurrency.CurrencyCode" />
					}
					@if (blocksHaveLabel)
					{
						<div class="pd-price-label">@currentPriceLabel</div>
					}
					<div class="pd-price@(priceModel.OldPrice.HasValue() ? " pd-price--offer" : "")@(priceModel.CallForPrice ? " pd-price--call" : "")@(isBundleItem ? " pd-price-sm" : "")">
						@if (!priceModel.CallForPrice && !isBundleItem)
						{
							<meta itemprop="price" content="@currentPriceValue.ToString("F", CultureInfo.InvariantCulture)" />
						}
						@Html.Raw(currentPrice)
					</div>
				</div>
				@if (oldPrice2.HasValue())
				{
					<div class="pd-price-block">
						@if (blocksHaveLabel)
						{
							<div class="pd-price-label">@oldPrice2Label</div>
						}
						<div class="pd-price@(isBundleItem ? " pd-price-sm" : "")">
							@Html.Raw(oldPrice2)
						</div>
					</div>
				}
			</div>

			<!-- Regular price -->
			@if (oldPrice1.HasValue() || priceModel.SavingAmount.HasValue())
			{
				if (oldPrice1.HasValue())
				{
					<div class="pd-oldprice-line">
						@if (oldPrice1Label.HasValue())
						{
							<span>@Html.Raw(oldPrice1Label):</span>
						}
						<span class="pd-oldprice">@Html.Raw(oldPrice1)</span>
					</div>
				}
				if (priceModel.SavingAmount.HasValue())
				{
					<div class="pd-oldprice-line">
						<span>@T("ShoppingCart.ItemYouSave"):</span>
						<span>@priceModel.SavingAmount (<span class="pd-saving-percent">@priceModel.SavingPercent.ToString("N0") %</span>)</span>
					</div>
				}
			}
		</div>

		<!-- Tier prices -->
		if (!isBundleItem)
		{
			Html.RenderAction("ProductTierPrices", new { productId = Model.Id });
		}

		<!-- Pangv & legal info -->
		if ((basePriceEnabled && Model.BasePriceInfo.HasValue()) || (Model.ShowLegalInfo && Model.LegalInfo.HasValue()))
		{
			<div class="pd-group">
				@if (basePriceEnabled && Model.BasePriceInfo.HasValue())
				{
					<div class="pd-pangv">
						@Html.Raw(Model.BasePriceInfo)
					</div>
				}
				@if (Model.ShowLegalInfo && Model.LegalInfo.HasValue())
				{
					<div class="pd-legalinfo">
						@Html.Raw(Model.LegalInfo)
					</div>
				}
			</div>
		}
	}
</div>