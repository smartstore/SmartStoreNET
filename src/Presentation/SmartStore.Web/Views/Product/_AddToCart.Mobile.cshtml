@model ProductDetailsModel
@using SmartStore.Web.Models.Catalog;

<!-- base price -->
<div class="base-price muted @(!Model.IsBasePriceEnabled ? "hide fade" : "")">
    @Model.BasePriceInfo
</div>
<div class="add-to-cart">
    @if (Model.AddToCart.CustomerEntersPrice)
    {
        <div class="customer-entered-price">
            <div>
                @Html.LabelFor(model => model.AddToCart.CustomerEnteredPrice, new { @class = "enter-price-label" })
                @*round price*@
                @Html.TextBox("CustomerEnteredPrice", Convert.ToInt32(Math.Ceiling(Model.AddToCart.CustomerEnteredPrice)), new { @class = "enter-price-input" })
            </div>
            <div class="price-range">
                @Model.AddToCart.CustomerEnteredPriceRange
            </div>
        </div>
    }
    @if (!Model.AddToCart.DisableBuyButton || !Model.AddToCart.DisableWishlistButton)
    {
        <div class="form-inline" style="@(Model.IsAvailable ? "" : "display:none;")">
            @if (Model.AddToCart.AllowedQuantities.Count > 0)
            {
                <div data-role="fieldcontain">
                    <fieldset data-role="controlgroup" data-type="horizontal" data-mini="true">
                        @Html.LabelFor(model => model.AddToCart.EnteredQuantity, new { @class = "qty-label" })
                        @Html.DropDownListFor(model => model.AddToCart.EnteredQuantity, Model.AddToCart.AllowedQuantities, new { @class = "qty-dropdown" })
                    </fieldset>
                </div>
            }
            else
            {
                @Html.LabelFor(model => model.AddToCart.EnteredQuantity, new { @class = "qty-label" })
                @Html.TextBoxFor(model => model.AddToCart.EnteredQuantity, new { @class = "qty-input" })
            }
        </div>
        if (!Model.AddToCart.DisableBuyButton)
        {
            <div class="form-inline" style="@(Model.IsAvailable ? "" : "display:none;")">
                <input type="submit"
                       name="addtocartbutton-@(Model.AddToCart.ProductId)"
                       value="@(Model.AddToCart.AvailableForPreOrder ? T("ShoppingCart.PreOrder") : T("ShoppingCart.AddToCart"))" />
            </div>
        }
        if (!Model.AddToCart.DisableWishlistButton)
        {
            <input type="submit" name="addtowishlistbutton-@(Model.AddToCart.ProductId)" value="@T("ShoppingCart.AddToWishlist")" />
        }
    }
    @Html.Widget("mobile_productdetails_add_info")
</div>