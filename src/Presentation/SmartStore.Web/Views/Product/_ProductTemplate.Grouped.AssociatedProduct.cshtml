@model ProductDetailsModel
@using SmartStore.Web.Models.Catalog;
@using SmartStore.Web;
@{
    string leftContentWidth = (Model.ThumbDimensions + 20).ToString() + "px";
}
<div class="product-variant-line update-container" data-url="@Html.Raw(Model.UpdateProductDetailsUrl("associateditem"))">
	<div class="clearfix">
		@if (!String.IsNullOrWhiteSpace(Model.DetailsPictureModel.DefaultPictureModel.ImageUrl))
		{
			<div class="variant-picture dynamic-image equalized-column" data-equalized-column-name="pd">
				<img alt="@Model.DetailsPictureModel.AlternateText" src="@Model.DetailsPictureModel.DefaultPictureModel.ImageUrl"
					 title="@Model.DetailsPictureModel.DefaultPictureModel.Title" />
			</div>
		}

		<div class="variant-data equalized-column" data-equalized-column-name="pd" style="margin-left: @leftContentWidth">
			@if (!String.IsNullOrWhiteSpace(Model.Name))
			{
				<div class="variant-name">
					@if (Model.VisibleIndividually)
					{
						<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" title="@T("Products.Details")">@Model.Name</a>
					}
					else
					{
						@Model.Name
					}
				</div>
			}
			@if (!String.IsNullOrWhiteSpace(Model.ShortDescription))
			{
				<div class="variant-description">
					@Html.Raw(Model.ShortDescription)
				</div>
			}

			<div class="row-fluid">
				<div class="equalized-column span12" data-equalized-column-name="vld">
					<div class="attributes" style="margin-right:40px">

						<table>
							@if (Model.ShowSku)
							{
								<tr valign="top" class="attr-sku @(String.IsNullOrWhiteSpace(Model.Sku) ? "hide fade" : "")">
									<td class="attr-label">
										<strong>@T("Products.Sku"):</strong>
									</td>
									<td class="value">
										@Model.Sku
									</td>
								</tr>
							}
							@*Manufacturer part number*@
							@if (Model.ShowManufacturerPartNumber)
							{
								<tr valign="top" class="attr-mpn @(String.IsNullOrWhiteSpace(Model.ManufacturerPartNumber) ? "hide fade" : "")">
									<td class="attr-label">
										<strong>@T("Products.ManufacturerPartNumber"):</strong>
									</td>
									<td class="value">
										@Model.ManufacturerPartNumber
									</td>
								</tr>
							}
							@*GTIN*@
							@if (Model.ShowGtin)
							{
								<tr valign="top" class="attr-gtin @(String.IsNullOrWhiteSpace(Model.Gtin) ? "hide fade" : "")">
									<td class="attr-label">
										<strong>@T("Products.GTIN"):</strong>
									</td>
									<td class="value">
										@Model.Gtin
									</td>
								</tr>
							}

							@if (Model.ShowWeight)
							{
								<tr valign="top" class="attr-weight @(String.IsNullOrWhiteSpace(Model.Weight) ? "hide fade" : "")">
									<td class="caption bold">@T("Products.Weight")</td>
									<td class="value">@Model.Weight</td>
								</tr>
							}

							@if (Model.ShowDimensions)
							{
								<tr valign="top" class="attr-length @(String.IsNullOrWhiteSpace(Model.Length) ? "hide fade" : "")">
									<td class="caption bold">@T("Products.Length")</td>
									<td class="value">@Model.Length</td>
								</tr>
								<tr valign="top" class="attr-width @(String.IsNullOrWhiteSpace(Model.Width) ? "hide fade" : "")">
									<td class="caption bold">@T("Products.Width")</td>
									<td class="value">@Model.Width</td>
								</tr>
								<tr valign="top" class="attr-height @(String.IsNullOrWhiteSpace(Model.Height) ? "hide fade" : "")">
									<td class="caption bold">@T("Products.Height")</td>
									<td class="value">@Model.Height</td>
								</tr>
							}

							@*Stock availability*@

							<tr valign="top" class="stock attr-stock @(String.IsNullOrWhiteSpace(Model.StockAvailability) ? "hide fade" : "")">
								<td class="attr-label">
									<strong>@T("Products.Availability"):</strong>
								</td>
								<td class="value">
									@Model.StockAvailability
								</td>
							</tr>

						</table>

					</div>
				</div>
				<div class="equalized-column span12" data-equalized-column-name="vld" style="text-align:right">

				</div>
			</div>

		</div>
	</div>

	<div class="variant-line-bottom row-fluid">

		@{
			bool hasAttrsOrGiftCard = false;
			string spanClass = "span24";
			if (Model.ProductVariantAttributes.ShouldBeRendered() || Model.GiftCard.IsGiftCard)
			{
				hasAttrsOrGiftCard = true;
				spanClass = "span12";
			}
		}

		@if (hasAttrsOrGiftCard)
		{
			<div class="left-content equalized-column span12" data-equalized-column-name="vlb">
				<div style="margin-right:20px">
					@{
			var dataDictAttributes = new ViewDataDictionary();
			dataDictAttributes.TemplateInfo.HtmlFieldPrefix = string.Format("attributes_{0}", Model.Id);
			<div class="product-attributes">
				@Html.Partial("_Attributes", Model.ProductVariantAttributes, dataDictAttributes)
			</div>
					}

					@{
			var dataDictGiftCard = new ViewDataDictionary();
			dataDictGiftCard.TemplateInfo.HtmlFieldPrefix = string.Format("giftcard_{0}_0", Model.Id);
			@Html.Partial("_GiftCardInfo", Model.GiftCard, dataDictGiftCard)
					}
				</div>
			</div>
		}
		<div class="right-content equalized-column @spanClass" data-equalized-column-name="vlb">

			@Html.Action("ProductTierPrices", new { productId = Model.Id })

			<div class="quick-links">
				@if (Model.HasSampleDownload)
				{
					<div>
						<a href="@Url.Action("Sample", "Download", new { id = Model.Id })">
							@T("Products.DownloadSample")
							<i class="fa fa-arrow-circle-o-down"></i>
						</a>
					</div>
				}
				@if (Model.DisplayBackInStockSubscription)
				{
					if (Model.IsCurrentCustomerRegistered)
					{
						<a class="subscribe-for-back-in-stock" data-toggle="modal" href="#back-in-stock-subscription-modal" rel="nofollow">
							@T("BackInStockSubscriptions.NotifyMeWhenAvailable")
							<i class="fa fa-phone"></i>
						</a>

						<script type="text/javascript">
							$(".subscribe-for-back-in-stock").click(function () {
								$("#back-in-stock-subscription-modal .modal-body").html('<iframe id="iframe-backinstocksubsription" src="@Url.Action("BackInStockSubscribe", new { id = Model.Id })" width="600" height="170" scrolling="no" frameBorder="0" />');
							});
						</script>

						<div id="back-in-stock-subscription-modal" class="modal hide fade" tabindex="-1">
							<div class="modal-body">
							</div>
							<div class="modal-footer">
								<button class="btn" data-dismiss="modal">@T("Common.OK")</button>
							</div>
						</div>
					}
					else
					{
						<a href='@Url.RouteUrl("Login")' rel="nofollow">
							@T("BackInStockSubscriptions.NotifyMeWhenAvailable")
							<i class="fa fa-phone"></i>
						</a>
					}
				}
			</div>

			@{
				var dataDictAddToCart = new ViewDataDictionary();
				dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", Model.Id);
				@Html.Partial("_AddToCart", Model, dataDictAddToCart)
			}
		</div>
	</div>

</div>

