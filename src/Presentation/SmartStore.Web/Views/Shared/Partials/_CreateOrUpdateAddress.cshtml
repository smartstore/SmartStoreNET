@model AddressModel
@using SmartStore.Web.Models.Common;

@if (Model.CountryEnabled && Model.StateProvinceEnabled)
{
<script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val();
                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var statesProgress = $("#states-loading-progress");
                statesProgress.show();
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "true" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        ddlStates.trigger("change");
                        statesProgress.hide();
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        statesProgress.hide();
                    }  
                });
            });
        });
</script>
}
@Html.HiddenFor(model => model.Id)

<div class="form-horizontal">  
    
    @if (Model.CompanyEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.Company, new { @class = "col-sm-3 form-control-label control-label" + (Model.CompanyRequired ? " required" : ""), @for = "Company" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Company, (Model.CompanyRequired ? null : new { @class = "form-control", placeholder = "Optional" }))
                @Html.ValidationMessageFor(model => model.Company, null, new { @class = "text-danger" })
            </div>
        </div>
    }
    
    <div><hr /></div>

    <div class="form-group row">
        @Html.LabelFor(model => model.FirstName, new { @class = "col-sm-3 form-control-label required", @for = "FirstName" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FirstName, null , new { @class = "text-danger" } )
        </div>
    </div>

    <div class="form-group row">
        @Html.LabelFor(model => model.LastName, new { @class = "col-sm-3 form-control-label required", @for = "LastName" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.LastName, null, new { @class = "text-danger" })
        </div>
    </div>

    @if (Model.StreetAddressEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.Address1, new { @class = "col-sm-3 form-control-label" + (Model.StreetAddressRequired ? " required" : ""), @for = "Address1" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Address1, new { placeholder = Model.StreetAddressRequired ? "" : "Optional", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address1, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.StreetAddress2Enabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.Address2, new { @class = "col-sm-3 form-control-label" + (Model.StreetAddress2Required ? " required" : ""), @for = "Address2" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.Address2, new { placeholder = Model.StreetAddress2Required ? "" : "Optional", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Address2, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="row form-group">
        @if (Model.CityEnabled)
        {
            <div class="col-sm-6">
                <div class="form-group row">
                    @Html.LabelFor(model => model.City, new { @class = "col-sm-6 form-control-label" + (Model.CityRequired ? " required" : ""), @for = "City" })
                    <div class="col-sm-6">
                        @Html.TextBoxFor(model => model.City, new { placeholder = Model.CityRequired ? "" : "Optional", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.City, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }

        @if (Model.ZipPostalCodeEnabled)
        {
            <div class="col-sm-6">
                <div class="form-group row">
                    @Html.LabelFor(model => model.ZipPostalCode, new { @class = "col-sm-4 text-xs-right form-control-label" + (Model.ZipPostalCodeRequired ? " required" : ""), @for = "ZipPostalCode" })
                    <div class="col-sm-8">
                        @Html.TextBoxFor(model => model.ZipPostalCode, new { placeholder = Model.ZipPostalCodeRequired ? "" : "Optional", @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ZipPostalCode, null, new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        }
    </div>

    @if (Model.CountryEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.CountryId, new { @class = "col-sm-3 form-control-label required", @for = "CountryId" })
            <div class="col-sm-9">
                @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, new { style = "min-width:289px" })
                @Html.ValidationMessageFor(model => model.CountryId, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.CountryEnabled && Model.StateProvinceEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.StateProvinceId, new { @class = "col-sm-3 form-control-label", @for = "StateProvinceId" })
            <div class="col-sm-9">
                @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { style = "min-width:289px" })
                <span id="states-loading-progress" style="display: none;">
                    @T("Common.Wait...")
                    <img src='@Url.Content("~/Content/Images/ajax_loader_small.gif")' alt="@T("Common.Wait...")" />
                </span>
                @Html.ValidationMessageFor(model => model.StateProvinceId, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    <div><hr /></div>

    <div class="form-group row">
        @Html.LabelFor(model => model.Email, new { @class = "col-sm-3 form-control-label required", @for = "Email" })
        <div class="col-sm-9">
            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger" })
        </div>
    </div>
    
    @if (Model.ValidateEmailAddress)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.EmailMatch, new { @class = "col-sm-3 form-control-label required", @for = "EmailMatch" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.EmailMatch, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EmailMatch, null, new { @class = "text-danger" })
            </div>
        </div>
    }
    
    @if (Model.PhoneEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.PhoneNumber, new { @class = "col-sm-3 form-control-label" + (Model.PhoneRequired ? " required" : ""), @for = "PhoneNumber" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.PhoneNumber, new { placeholder = Model.PhoneRequired ? "" : "Optional", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PhoneNumber, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    @if (Model.FaxEnabled)
    {
        <div class="form-group row">
            @Html.LabelFor(model => model.FaxNumber, new { @class = "col-sm-3 form-control-label" + (Model.FaxRequired ? " required" : ""), @for = "FaxNumber" })
            <div class="col-sm-9">
                @Html.TextBoxFor(model => model.FaxNumber, new { placeholder = Model.FaxRequired ? "" : "Optional", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FaxNumber, null, new { @class = "text-danger" })
            </div>
        </div>
    }

    <div class="form-group row">
        <div class="col-sm-push-3 col-sm-9 text-muted address-required-hint">
            @T("Address.Fields.Required.Hint")
        </div>
    </div>

</div>
