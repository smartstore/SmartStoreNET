@model EstimateShippingModel
@using SmartStore.Web.Models.ShoppingCart;
@if (Model.Enabled)
{
    <script type="text/javascript">
        $(function () {
            $("#@Html.FieldIdFor(model => model.CountryId)").change(function () {
                var selectedItem = $(this).val() || 0;

                var ddlStates = $("#@Html.FieldIdFor(model => model.StateProvinceId)");
                var estimateBox = $(this).closest(".estimate-shipping");

                var throbber = estimateBox.data("throbber");
                if (!throbber) {
                    throbber = estimateBox.throbber({ white: true, small: true, message: '', show: false }).data("throbber");
                }
                throbber.show();

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                    data: { "countryId": selectedItem, "addEmptyStateIfRequired": "false" },
                    success: function (data) {
                        ddlStates.html('');
                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        ddlStates.trigger("change");
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.'); // TODO: Loc
                    },
                    complete: function () {
                        _.delay(function () { estimateBox.data("throbber").hide() }, 400);
                    }
                });
            });
        });
    </script>

    <div class="shipping">
        <div class="estimate-shipping cart-box card">
            <h4 class="title card-header">@T("ShoppingCart.EstimateShipping")</h4>

            <div class="card-block">

                <div class="hint text-muted">@T("ShoppingCart.EstimateShipping.Tooltip")</div>

                <div class="shipping-options m-t-2" style="border: 0;">
                    <div class="form-group">
                        <label for="@Html.IdFor(x => x.CountryId)">
                            @Html.LabelFor(model => model.CountryId)
                        </label>
                        @Html.DropDownListFor(model => model.CountryId, Model.AvailableCountries, T("Address.SelectCountry").Text, new { @class = "country-input", style = "width: 100%" })
                        @Html.ValidationMessageFor(model => model.CountryId)
                    </div>
                    <div class="form-group">
                        <label for="@Html.IdFor(x => x.StateProvinceId)">
                            @Html.LabelFor(model => model.StateProvinceId)
                        </label>
                        @Html.DropDownListFor(model => model.StateProvinceId, Model.AvailableStates, new { @class = "state-input", style = "width: 100%" })
                        @Html.ValidationMessageFor(model => model.StateProvinceId)
                    </div>
                    <div class="form-group">
                        <label for="@Html.IdFor(x => x.ZipPostalCode)">
                            @Html.LabelFor(model => model.ZipPostalCode)
                        </label>
                        @Html.TextBoxFor(model => model.ZipPostalCode, new { @class = "zip-input form-control" })
                        @Html.ValidationMessageFor(model => model.ZipPostalCode)
                    </div>
                    <div class="form-group">
                        <input type="submit" name="estimateshipping" value="@T("ShoppingCart.EstimateShipping.Button")" class="btn btn-warning estimate-shipping-button" />
                    </div>
                </div>

                <div class="shipping-options">
                    @if (Model.ShippingOptions.Any())
                    {
                        <div>
                            @foreach (var shippingOption in Model.ShippingOptions)
                            {
                                <div class="shipping-option-item" style="margin-bottom: 8px">
                                    <div class="option-name">
                                        @Html.Raw(HttpUtility.HtmlDecode(shippingOption.Name))
                                        (@shippingOption.Price)
                                    </div>
                                    <div class="option-description text-muted">
                                        @Html.Raw(shippingOption.Description)
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    @if (Model.Warnings.Count > 0)
                    {
                        <div class="alert alert-danger" style="margin: 0 0 12px 0">
                            @for (int i = 0; i < Model.Warnings.Count; i++)
                            {
                                <p>@Model.Warnings[i]</p>
                            }
                        </div>
                    }
                </div>

                @if (Model.ShippingInfoUrl.HasValue())
                {
                    <div>
                        @Html.Raw(T("ShoppingCart.ShippingInfoLink", Model.ShippingInfoUrl))
                    </div>}
            </div>
        </div>
    </div>
}